Todavía no. Estamos en la segunda parte de nuestra primera clase de IPv6. Bien, vamos a hacer... a ver en qué secuencia... Sí, vamos a ir a la cabecera porque es bastante rápido y después, antes de terminar, les voy a mostrar más o menos cómo es que tenemos configurado esto. Lamentablemente no tenemos un proveedor que nos dé IPv6 en la pata externa donde tenemos la IPv4 pública, no tenemos una IPv6 pública y hemos tenido que usar algún servicio extra para hacerlo, servicio de tunneling, y vamos a describirlo un poquito eso. Vamos a la cabecera, les muestro ambas cabeceras. Les cuento que... van ahí lamentablemente no se ven la cantidad de renglones, pero si IPv4 tiene 32 bits, y con 32 bits o 4 bytes de origen y destino, y en total mide 20, uff, ¿cuánto medirá una cabecera IPv6? ¿Cuánto es el mínimo que tiene que medir una cabecera IPv6? ¿Qué les parece? ¿Cuánto mide en bytes una dirección IPv6? Una dirección IPv4 mide 4 bytes. ¿Cuánto es la relación de tamaño en bits? ¿Qué también es la relación de tamaño en bytes entre ambos? ¿Entre 6 y 4? 4 veces más grande. Ah, bien, por lo tanto, ¿cuánto es el tamaño mínimo? 16. 16 por 2, por lo tanto, ¿se entiende a dónde estoy yendo? Sí, sí. Bien. 16 por 2, por lo tanto, quiere decir que la cabecera IPv6 no puede medir menos de 32 bytes. ¿Sí? Que serían estas dos direcciones, esta y esta. Bueno, la cabecera IPv6 está tan optimizada que mide nada más que 40 bytes. Así como en IPv4 medía 20, siendo que las direcciones solamente ocupaban 8 bytes, 2 veces 4 bytes, y el resto de los 12 bytes eran estos 3 renglones de 4. Curiosamente IPv6 está tan bien diseñado que nada más mide el doble, siendo que las direcciones son el cuádruple. ¿Se entiende lo que dije? Sí, tenemos 2 por 8 en direcciones, 16 bytes, y solamente se han ocupado 32, es decir, 2 veces 32 bytes, y solamente se han ocupado 8 bytes, es decir, 2 renglones de esto que estamos acostumbrados a leer en 32 bits, para la cabecera. Y hay algunas cosas que se han mantenido y otras cosas que no. Hagamos un poquito de análisis. ¿Cuáles ven ustedes? Bueno, en realidad acá están pintadas, fíjense que están pintadas aquellas que se han mantenido conceptualmente, ¿no? Exactamente, por ejemplo, el "time to live" de IPv4, ¿qué es en IPv6? El "hop limit". "Hop limit". Ahora lo llamamos bien, como bien sabemos, "time to live" no tiene nada que ver con tiempo, no hay segundos ahí, sino es cantidad de hops, justamente, "hop limit". El protocol, ¿cuál sería en IPv6? Que son nada más que las que están en celeste, las que se han mantenido conceptualmente. No son exactamente, pero están muy cerca. "hop limit", "time to live" son exactamente iguales. ¿Cuál sería el protocol de IPv4? Es "next header". "Next header" en realidad apunta a qué diablo estoy cargando acá, lo que estoy ahora señalizando con el mouse. En el caso de IPv4, decía, lo próximo que viene acá es un protocolo. ¿Cuál es el protocolo? De capa de transporte. IPv6 lo generaliza porque IPv6, "next header" puede ser otro pedazo de IPv6 mismo. Entonces directamente dice, ¿qué es lo que yo traigo? ¿Qué es mi payload? Y por eso le llama "next header", no "protocol", para evitar esto de que es un protocolo más alto, más bajo, lo que fuera. El "next header", ¿qué traigo atrás? Que viene en el acoplado, eso es "next header". ¿Cómo sería un IPv6? Y como "next header" tendría un identificador que también tiene 8 bits, que dice que lo que cargo es IPv6 y en realidad que puede ser un encapsulamiento, y acá viene una desmentira. Ya te termino de responder la pregunta, se va a responder un poco con lo que voy a hablar enseguida, para evitar enroscarme hacia adelante, pero ahí volvemos sobre eso. ¿De dónde ven el "total length"? ¿Cuál sería el "total length" representado en IPv6? "Payload length". ¿Cuál es la diferencia? Le estoy diciendo la misma palabra. ¿Recuerda el "total length" de dónde se medía? ¿Dónde arrancaba la medición del "total length"? Ahí hemos hecho un dibujito. Arrancaba acá, donde esté con el mouse ahí. E incluía toda la cabecera y después medía todo lo que venía. ¿Qué será "payload length"? El acoplado. Exacto, el largo del acoplado, no el largo mío. Entonces fíjense que hay una cuestión como mucho más prolígena en IPv6, donde dice "next header", esto es lo que llevo de carga, estoy llevando carbono, estoy llevando heladeras atrás, "next header" y esto es lo que mide lo que yo cargo. Como una cuestión mucho más encapsulada. En vez de IPv6 era un poco más confuso, porque la capa de arriba tenía que restarle al "total length", al largo de la cabecera, el "ihl". Fíjense que interesantemente, acá ya te empiezo a responder lo del "next header", fíjense que no está "ihl", voló "ihl". "Ihl" era "internet header length", identificaba el largo de esto, porque estaban las opciones y el padding, que también voló, por eso están rojos. ¿Por qué? Porque las opciones, las posibles extensiones de IPv6 se representan con el "next header". Yo necesito decir algo más de la cabecera de IPv6, como por ejemplo fragmentación en origen, y ahí es donde me desmiento, yo les venía diciendo "en IPv6 no hay fragmentación, no hay fragmentación", que era una súper simplificación en realidad. La red no tiene permitido fragmentar, eso es cierto, no hay fragmentación, es como que IPv6 arranca con "df = 1", "don't fragment = 1", y es por deforme, manera de que un router IPv6 fragmente, no está permitido. Sin embargo, está permitido que el origen fragmente. Y para representar esa fragmentación o para representar otras opciones similares en la IPv4, en realidad se usa este mecanismo, en donde "next header" será otra cabecera, por ejemplo podría ser una cabecera de fragmentación IPv6, diciendo las cosas que no se traen por default. ¿Qué prefirieron los ingenieros de IETF cuando diseñaron esto? "No gastemos un renglón en algo que sabemos que está mal". De última, si alguien necesita fragmentar en origen, no en camino, no está permitido, como decía recién, bueno, creamos un "que pague", entre comillas "que pague", con una cabecera dedicada, cabecera de fragmentación de IPv6, que tenga una información similar a la que tenía IPv4, siempre, porque esto no era opcional, y bueno, y que después recién venga el payload. Entonces es como que, es como si fuera una cadena de Legos, ¿no? Es como que IPv6, por default te viene esta cabecera y no es cambiable, es siempre 40, lo cual simplifica terriblemente las cosas también, porque antes, los routers, imagínense, ustedes están implementando acá la función que extrae la cabecera IPv6, tienen que empezar a levantar esto, ver el IHL, que generalmente es 20, pero si viene con opciones viene más, este IHL sería 5, 5 renglones, o podría ser, este IHL tenía 4 bits, pero estaba representado en renglones, así que puede llegar hasta 15, si dice 15 significa la cabecera es de 60, entonces yo tengo que leer estos bits para recién ver hasta dónde corto la cabecera. Acá en IPv6 va el tajante, dice, no es largo de cabecera porque, chicos, la cabecera es 40, listo. Si necesitan decir algo más, exprésenlo con un next header. Y de hecho hay varios, como next header, el acoplado, puede ser, aumentar lo que digo yo con mi IPv6, es decir, por ejemplo, que llevo fragmentos atrás, o directamente que yo estoy cargando TCP. Y eso, por eso se llama next header, porque a veces es directamente una carga de un protocolo de más arriba, o puede ser algo que aumenta, que ocupa el lugar conceptual de las opciones, que ocupaban las opciones en IPv4, más la fragmentación. Type of service, no lo vimos en IPv4, esto acá se llama traffic class, son bits que les indica, que uno le puede indicar a la red, si prefiere para este datagrama, si prefiere un servicio de baja latencia, de alta velocidad, de alta confiabilidad, por ejemplo. Yo le puedo pedir, eso era en IPv4, en IPv6 traffic class se puede clasificar de algunas maneras más específicas, no lo vemos porque requeriría casi media clase hablar de traffic class, y hemos preferido en el balance de cosas que queremos dar, no verlo en profundidad. Nos queda conceptualmente la idea de que ahí yo, si tengo control sobre los routers, puedo establecer caminos que son de menos costo, de menos latencia, o de más velocidad, o de más confiabilidad, y yo con traffic class, en mi datagrama puedo elegir uno u otro camino, poniendo bits distintos ahí. Bueno, entonces, fíjense que se destruyó totalmente este renglón, el segundo renglón de IPv4, estaba dedicado a fragmentación, les vengo diciendo, no hay fragmentación IPv6 en camino, no hace falta que esté por el front, si alguien tiene que fragmentar, tendría que pagar por una cabecera extra acá abajo de fragmentación IPv6. ¿Qué había de checksum? Fíjense que voló, ¿ven algún checksum en la cabecera IPv6? ¿Algo que diga checksum? No. No, no hay checksum. Estamos en un punto de la tecnología que se gastaba demasiado espacio en la cabecera en checksum para algo que ocurre raramente. Las tecnologías que tenemos hoy, o que algunas directamente descartan a nivel de enlace, como es Wi-Fi, que tiene su propio checksumeo. Entonces se dijo, ¿para qué hacer checksum? Eso nos vino súper bien en los años 80, 70, 80, cuando empezamos con la Internet y ARPA y aquellos protocolos originarios, que nuestras capas de enlace eran menos confiables, hoy no tienen sentido. Fíjense cómo hay varias decisiones de diseño. Hay versiones interesantes porque versión, más allá de que acá no es muy alegre los tamaños, mi TOC, cuando digo TOC, digo TOC real, como es trastorno obsesivo compulsivo. Si yo hubiera tenido que dibujar esto, lo hubiera dibujado exactamente el mismo tamaño de renglón y exactamente el mismo ancho para poder compararlo. Esta versión acá, estos 4 bits, tan justo, entonces, cuando yo recibo esta cabecera, ¿qué leería acá? ¿Qué leía ahí en IPv4? ¿4 bits para IPv4? ¿Cuál era la secuencia de bits que leía? ¿4 representaban bits? 0, 0, 0, 1, 0. ¿0, 1? 0, 1, 0, 0. 0, 1, 0, 0, sí, eso es 4. ¿Y cómo sería 6? 0, 1, 1, 0. 0, 1, 1, 0. De hecho, acá dice 0, 1, 1, 0. Y acá 0, 1, 0, 0. Tiene que indicar 4 o 6. Esa parte se mantiene de tal manera que cuando se recibe esto, rápidamente se puede leer la cabecera y saber si tengo que "prender el deco", entre comillas, interpretar a esto como un IPv4 o interpretarlo como un IPv6. Hay otro... Hay un interesante, tiene un color distinto ahí, se lo reconoce una especie de verde raro, que es un "flow label", a lo cual se le han dedicado nada más y nada menos que 16 bits y no está en IPv4. La idea de un "flow label", y esto es extraño, permite... tiene un sabor orientado a conexión, y por favor, dioses de la capa 3 de Internet, no me maten acá con un rayo, porque sabemos muy bien que IPv4 y IPv6 también no es orientado a conexión, son datagramas que van. Pero "flow label" permite, si yo tengo control sobre la cadena de routers entre un punto y otro, identificar "flows" como si estuvieran dentro del mismo tubo, varias conexiones dentro del mismo tubo. Ejemplo, imagínense una videoconferencia, donde tengo, por cómo están implementados los protocolos, yo solo tengo, no sé, una conexión para el canal de video, otra conexión para el canal de audio, como bien sabemos, el audio no se toca, el video sí, si la conexión está más o menos, yo me podría permitir que el video se corte un poco, pero es súper molesto si se corta el audio, ¿cierto? coinciden conmigo en eso, es una cuestión de percepción, pero no hay problema si se habla, si el audio va estable y esto se va moviendo así, es mucho más percibible. Entonces bien podría ser un protocolo, no sé, que implemente a través de conexiones distintas los canales de audio y de video, pero yo no quiero meter como dentro de la misma bolsa, por decir, esto representa una sola comunicación de audio-video entre estas partes, como que una sola manguerita dentro de las cuales están yendo varias conexiones distintas. La idea de Flow Label es esa, son 16 bits que a mí me permiten hacer que la red reconozca que conexiones distintas entre los mismos origen y destino, puede ser, no sé, entre este IP y este IP, contra distintos puertos, pero ¿sabés qué routers del medio? Todas son partes de la misma. Entonces yo le pongo el mismo Flow Label y yo puedo establecer condiciones de tráfico tales como, por ejemplo, que cada flow no me gaste más de, no sé, no me consuma en la red o le dedico en la red no más de 2 megabits por segundo. Porque yo tengo, por decir algo, no quiero que ninguno consuma más porque yo quiero, tengo un enlace entre estos dos puntos y he conseguido, no sé, 20, estoy armando números al vuelo, ¿no? 20 megabits entre estos dos puntos tengo. Y dedico 10 megabits para todo lo que es tráfico normal de internet y dedico otros 10 solo para audio y video. Como tengo audio y video de alta resolución, uso 2 megabits para cada uno, puedo soportar hasta 5 conexiones. Esas 5 conexiones, esos 5 flows, yo puedo armar la red para obligar a que ninguno de estos 5 flows haga un sobreuso y puedo decirle a los routers de medios, si es que yo los controlo, decirle "Mirá, acá van a ir 5 flows identificados de tal manera y vos tenés que garantizarme que no le vas a dar más de 2 megabits por segundo a cada uno". Entonces tiene un sabor de conexión, no es orientada a conexión, pero es una manera nuevamente de darle hints a la red que yo quiero que me trates todo este grupo de conexiones entre estos dos hosts como si fueran, que aparentemente se ven distintas porque los portes involucrados son distintos, pero son parte del mismo flow. Flow 1, flow 2, flow 3. Y esa flow label es la que me permite identificar esos distintos flows. ¿Se entiende? Un concepto extraño, ¿no? Porque no está en IPv4 y si está, fíjense que ocupa nada más y nada menos que 16 bits en IPv6. Bueno, a ver ICMP, lo vemos acá en detalle. Una cosa interesante que tiene IPv6 es que no tiene ARP. ¿Recordemos qué era ARP? ¿Cuál era? Lo vimos en la clase anterior, creo. ¿Cuál era la misión de ARP? Descubrir MACs. Hacer el mapeo de dirección lógica, de dirección IPv4 a dirección física. Y eso ahora se hace con ICMP. Recordemos que ICMP era un protocolo que estaba ahí de ayuda a IPv4. Acá es exactamente lo mismo, el rol es de ayuda, pero esa ayuda es un poco más amplia que la que existía en IPv4. En IPv6, no solo ayuda para cuestiones de red, sino también para cuestiones relacionadas con enlace. Ocupa el lugar semántico, el lugar de funcionamiento de ARP. ¿Entonces, qué les parece? Tráiganme el concepto de ARP, pero úsenmelo en IPv6 con ICMP. ¿Cómo sería esa? ¿Cómo se implementaría? ¿Cómo lo implementarían ustedes? Porque han cambiado algunas cositas de ARP. ¿Qué usábamos en ARP para descubrir quién tiene...? El broadcast. Y acá estamos fritos porque acá no hay broadcast. ¿Cuál sería la edición de Multicast? ¡Uf, puta! Me quemé. Yo quería no quemarme. La FC. No la FC, la FC, ¿recuerdan la FC federa para Unique Local? Es esta que tenemos en el ETC host, esta que yo le hice ping. Esta, ¿no? Esa me identifica... No, esas son los routers, perdón. Esa. Esa me identifica a todos. Entonces, yo podría tirar ese datagrama a todos mis vecinos que tienen IPv6, que son parte de ese grupo Multicast, preguntándole quién tiene esta dirección. Pero no solo pregunto con OAT, no me traigo de la... Repisa otro protocolo, uso el mismo ICMP, que me va a ayudar para todas las cosas que ya vimos que ayudaba en v4. En v6 también ayuda para el descubrimiento de enlaces. Eso se llama Neighbor Discovery. Y fíjense, vamos a hacer... Yo voy a dejar corriendo ese pedámeno. Y en 3, 6... Vamos a poner ahí que antes era 3, 6. Bien, no está tan ruidoso. Ahí está. Lo pueden ver ahí. Neighbor Solicitation. A ver si lo podemos cazar. Sí, se ve ahí. Neighbor Solicitation. Con un pequeño detalle, no hace... Fíjense que ese es el pin que yo había hecho, era FF2 2.1. Sin embargo, acá es 2.1 más algo más. En realidad eso es algo más, son pedacitos de la dirección que estoy tratando de descubrir. Fíjense que estoy tratando... Quizás esto es muy complicado para este momento, pero se los dejo para cuando realigan esto. Pero yo, yo acá... Fíjense que yo en F80, ¿no? Porque yo como parte de enlace, no hace falta que ponga la dirección IP pública. Yo quiero descubrir mi vecindad, así que ¿qué uso? La dirección que sea más compatible con eso, que son las F80. ¿Cuál es mi F80 en esta red? Entonces, yo voy a mandar Multicast. Hemos visto que lo que empezaba con FF era Multicast. 0.2.0.1, pero fíjense que le pongo un pedacito de la dirección que estoy tratando de descubrir. Unos bits ahí. ¿Para qué? Porque la máquina que tiene esta dirección, la pregunta es la misma. "Jujas, ¿quién tiene esta?" La máquina que tiene esta dirección se asoció a este grupo Multicast, y no a cualquiera. De tal manera que a su vez es como un subconjunto entre grupos Multicast para no molestar a las otras máquinas con esta pregunta. Es como que yo le agrego una dirección Multicast a mi máquina. Esta, yo cuando obtengo una... Hacerlo en 6MA. Fíjense. Me vuelvo a mi máquina ahora. 6MA. Entonces, MA es por Multicast adreces. También lo puedo hacer para 4, que está en las dos 24 que habíamos visto. Pero quedemos en IPv6. Fíjense que si vemos los adreces acá que yo tengo. En IPv6 van a ver... ¿Qué ven acá de coincidencia? Ven que mi máquina ha prendido como grupos Multicast adicionales en IPv6 este. Que es el prefijo Multicast, y le ha puesto los últimos bits de mi dirección IPv6. Y si ustedes hacen IP-6MA en sus máquinas van a ver esto distinto. Como que pertenece a distintos grupos Multicast. De tal manera que cuando alguien pregunte ¿Quién tiene la... esta dirección completa? Solamente atiendan todas aquellas máquinas que están dentro de este grupo Multicast. Que muy probablemente sea solamente yo. Es una sobre-optimización del protocolo. El lugar que ocupaba ARP, entonces lo ocupa ICMP. Esto se llama Neighbor Discovery. Era lo que estábamos viendo recién cuando se pedampeamos y se me pese a eso. ¿Alguien que me haga un ping? Estaba la dirección acá, era lo que dice luego de Lucas, la F80 y la penúltima línea. Si alguien me hace un ping. ¿Un ping a la F80 termina con D804? ¿Alguien? Por favor. Ahí está. Bien. Acá entonces hay un Able Solicitation. ¿Quién tiene... no, es un ping a la 2001. No, no es ese. ¿Alguien que me haga un ping? ¿Alguien hizo un ping? Yo no tengo IPv6. No, pero si tenés, si tenés en la F80. Ahí estoy haciendo. Recuerden, para hacer ese ping es por ciento en 3, ¿no? ¿Por ciento en 3? Sí. ¿Por ciento en 3? Sí. ¿Por ciento en 3? Sí. Recuerden, para hacer ese ping es por ciento en 3, ¿no? Sí. Ahí lo tienen. Gracias. Fíjense acá, esta F80, porque alguien hizo, alguien acaba de hacer un ping a la F80, a esta, a la D804 por ciento en 3. ¿Sí? Entonces, preguntando, en realidad debe ser yo respondiendo por lo que veo. Bueno, en definitiva la pregunta es ¿Quién tiene esta? La F80 y esta respondió. Uno preguntó por Network Solicitation, que se vendría a ser el equivalente al AppRequest. Y el Network Advertisement, que es el equivalente al AppReply. De V4. ¿Por qué promociona? ¿Por qué dice promociona? ¿Promociona? Como Advertisement. Advertisement, sí es. No, Advertisement. Raro. Quizás sea una cuestión de inglés nativo, que nosotros obviamente no tenemos que es. Advertisement es hacer conocer, en realidad. Esa sería la traducción en este contexto. Darme a conocer. Me doy a conocer. Ahí hay algo interesante que... Hay otros Advertisement que podemos ver ahí, ¿no? Ya que estamos. Pienso que hay otros que es Router Advertisement. Lo envía alguien, que vendrá a ser un router, ¿a qué dirección lo envía? ¿Qué dirección era esta, recuerdan? Estuvimos jugando con esta. El multicast de los nodos. Multicast de todos los nodos, perfecto. Si le agregue "peonet" es "host", es "all nodes". Le está diciendo a todos los nodes. El router se está dando a conocer. A ver si podemos ver un poquitito más el... Bien. Déjenme ver. "Lifetime", "hop limit" 64, "maximum" "unary node" Ufa, pero no veo lo que me interesa. "prefijo", ¿por qué no está? Ah, es que otro... Voy a dejarlo correr un poco, a ver si caso. ¿Atrás de qué estoy? ¿Qué es lo que... atrás de qué estoy? ¿De dónde se les ocurre a ustedes que habrá salido mi reacción IP pública esta? Les pre-respondo, no es en DHCP. Es decir, acá esto no se negoció cuando negoció, como hacía él cuando se hizo la IP de 4, cuando arrancaba la máquina, sino que se usó algún mecanismo como esto. Entonces, ¿qué es lo que habrá ocurrido ahí? ¿Qué les parece? Voy a hacerlo más largo esto. Ahí está, sí, me faltaba la longitud nada más. Miren, estoy dampeando ahí y le voy a poner que me dampee, nomás para que sea más rápido. Le voy a pedir que me dampee un paquete nada más. Le dice "mp6" y lo voy a comparar con esto. Y quiero que ustedes me encuentren alguna similitud en lo que leen arriba con lo que leen abajo. ¿Qué es lo que está gritando el router? ¿Por qué digo gritando el router? Porque este es un router advertisement. El router se está diciendo "acá estoy" y compañeros de red tengan la gentileza de recibir esta info. ¿Qué ven ahí de composición o de similitud entre este router advertisement con las direcciones IP que tengo abajo? IP6, obviamente. La red. Ajá, el prefijo, fíjense que piola, ¿no? ¿Y cómo hago yo para completar mi dirección IP6? Si yo hago "ip leader en 3" ¿Cómo construyo todo esto? Fíjense, fíjense qué está ocurriendo. Yo como nodo, sin tener nada, sencillamente por escuchar ahí como vecino, levanto el advertisement del router y digo "eh, buenísimo, acá hay alguien que me está publicando el prefijo este/64" y lo tomo para construir la primera parte de la dirección, este/64 que está acá. La mitad de la dirección IPv6. ¿Y la otra mitad con qué la completo? ¿Cómo la completo yo esto? Con la Mac. Con la Mac, exacto. Y fíjense, esto es fascinante, acá tengo determinístico, determinístico, ya tengo dirección IPv6, sencillamente porque hay un router que está haciendo advertisement, está diciendo "muchachos, compañeros de red, pueden usar este prefijo/64" fíjense que es un prefijo, obviamente, de público, porque empieza con 2. Y no hace falta ninguna otra coordinación porque todos saben, las RFC dicen, que para poner la dirección de host, entonces directamente ponele la dirección de host derivada de tu Mac. Y listo, ya tenés IPv6 pública. Sin más protocolo. Fíjense que además, ¿qué otro tipo de datos hay de interesante acá? Que es como que el router le preconfigura a estos vecinos, le dice a la vecindad "muchachos, acá hay un prefijo que pueden usar, es 2001.470.dba.9/64" Y además que otras cosas. El hop limit. Hop limit, ¿se recuerdan cuando hablábamos del default de 64 para el TTL? Ahí lo tienen. Bien, podría este router decir otro, autoconfigurar a todos los nodos de esta vecindad en otro hop limit. 64, que es el default que como les contaba ya habíamos visto. ¿Qué validez tiene este advertisement? Ahí lo dice, 86.400 segundos, que esto se me han recuerdo es un día. Si, es 3.600 por 24, creo que es. Creo, pero puede estar mal. Es el value time, el prefix time, el tiempo de validez del prefijo. M2Option. Fíjense otra cosa interesante, el router mismo me está diciendo "che, muchachos" Oh, fuck. No solo eso, sino que por si no lo tienen bien configurado, configuren su M2Option 1458, porque eso es lo que yo sé como router que deberían usar cuando usen datagramas con este prefijo. Y de paso, ¿hay algún otro dato ahí importante? ¿Dónde está esto? ¿Lo ven ahí escrito en algún lado? En el default, la ruta por default. Ahí está. Entonces ahí tienen la MAC, aprendieron la MAC, fíjense que de hecho acá está completo, ¿no? Fíjense que es interesante porque es como que el default router, acá empezamos a ver dos entradas, pero el default router es suficiente con decir que el default router es a través de la dirección de enlaces con la cual yo tengo relación con este router, de la cual soy vecino. Que es eso igual a eso. Bien, esto era como un pequeño picoteo de cuál es el rol de ICMP6 en el stack cuando hacemos IPv6. Y básicamente no hay otro protocolo de ayuda, está todo en ICMP. Como que directamente, ¿para qué crear más protocolos? Todos los protocolos adicionales que necesite IPv6 para funcionar están en ICMP. Acá esto es para contarles cómo es que tenemos IPv6 acá en la cloud. En realidad, como les contaba, no tenemos nuestro router de internet, que es este que está aquí, con esta dirección IP pública. Acá no tenemos nosotros en realidad un proveedor de IPv6, tenemos solamente IPv4. Pero hay, y no muchos, creo que queda un manojo o uno o dos, proveedores de IPv6 que te permiten construir un túnel y a través de ese túnel te delegan un prefijo de IPv6. El que está nosotros, usamos nosotros, se llama he.net, que en realidad también, que es por Hurricane Electric. Cualquiera se puede crear una cuenta acá y ustedes podrían configurar IPv6 incluso sin tener, no a nivel de router, sino a nivel de nodo, con lo cual tener ustedes una IPv6 pública, creándose una cuenta en este proveedor, es tunnelbroker.net. Fíjense, acá estoy dentro de la cuenta que creó Diego, y acá hay algunos datos interesantes, fíjense, un tunnel ID, que obviamente es un muy identificador de túnel, fíjense la cantidad de túneles que estos flacos tienen creados. Estos son los tunnel endpoints, en IPv4, estos son ellos, y estos somos nosotros, es lo que veía recién en el dibujito, la 251.41.176, la dirección pública de nuestro router hacia la internet. Y esta es la dirección IPv6 del lado server y del lado cliente. Entonces, es como que... Y acá me voy a permitir una disgresión. Siempre que ustedes vean tuneleo, hay básicamente una blasfemia al esquema de capas de protocolo, porque cuando hay tunneling, ustedes vieron que nosotros tenemos capa de enlace, capa de red, o si quieren, capa 2, capa 3, 4, 5, etc. Cuando hay tunneling, en realidad estoy haciendo, por ejemplo, capa 3 sobre capa 3. Este túnel de IPv6 que cruza toda la internet, es como si su capa de enlace fuera la internet misma, la IPv4. Es un túnel IPv6 sobre IPv4. Entonces, para IPv6, lo que tiene abajo, como IPv4, al estar tuneleado, es el equivalente a que fuera max. Pero en sí mismo es todo una capa de red. Por eso es que le digo que cuando hay tunneling, hay violación de esto de que la 3 va sobre una 2, que va sobre una capa física. Bueno, cuando hay tunneling, es o 3 sobre 3, IPv6 sobre IPv4, o incluso hay tunneling sobre TCP, o incluso mucho, mucho, mucho más arriba. Lo de OpenVPN, por ejemplo, es sobre UDP. Así que eso en realidad es una capa 3 sobre una capa 7. Bien, bien, bien ahí arriba. Y eso es tuneleo. Siempre que ustedes se enfrenten con un túnel, van a ver esta cosa. Es como que hay toda una capa, típicamente de capa 3 hacia arriba, montada sobre al menos otra capa 3 hacia abajo. Entonces, lo que ocurre efectivamente es que HURICAN Electric nos ha delegado una barra 48. ¿Qué onda una barra 48? ¿Cuántas redes nos permite crear? ¿Cuántas barras 64 podemos crear con una barra 48? ¿Es generoso, no es generoso? ¿Qué les parece? Estamos asumiendo que barra 64 es el default. ¿Cómo llegaste a esa cuenta? 64 menos 48. ¿Eso 16 qué? ¿16 en decimal o en bits? En bits. 16 bits que podemos multiplicar. Entonces, la 16 sería la cantidad de redes. 65 mil y pico de redes. Fíjense las posibilidades que nos está dando el direccionalmente IPv6. Por haber creado este túnel, en realidad, por default, y acá es una cuestión meramente de operación de este servicio, por default te dan un barra 64 nada más, que es este que está acá. Es decir, te dicen, bueno, sí, ok, yo te conecto a estas dos puntas, te doy para cada punta de la conexión esta dirección, es decir, que este router que está tuneleando en IPv4 para cruzar todo el IPv4, recuerden, pongámonos por un momento el casco IPv6, y pensemos que yo con casco IPv6, todo lo que está abajo es enlace, y permítanme la blasfemia, ¿no? Quiere decir que si yo tengo una punta IPv6 y otra punta IPv6, abajo yo tengo enlace, quiere decir que es como si toda la Internet, la IPv4 fuera mi capa de enlace, en donde las MACs son las direcciones IP públicas, mías y tuyas. ¿Sí? ¿Vale la analogía? ¿Se entiende? Yo con lentes de IPv6 de capa de red, yo veo hacia abajo, y las direcciones que yo identifico abajo son las MAC de mi capa de enlace. Pero como esto es un túnel, mi capa de enlace es toda la Internet, y las MAC son las IP públicas. Entonces yo encapsulo de origen a destino, cuando tengo que cruzar con este túnel, uso como direcciones más abajo de mi capa 6, de mis direcciones IP6, las encapsulo dentro de direcciones IP4. Para mí es como si fuera mi capa de enlace, que obviamente es en sí misma una capa de red. Y de esa manera logro que atraviesen toda la Internet, igual, entre comillas, que yo logro que una trama de Internet pase a través de un switch y llegue a otro, ¿no? A través de la identificación de estos nodos. En este caso estoy usando como identificación la propia IPv4, para montarle arriba un pedazo de IPv6. Entonces, volviendo. Por default te dan una barra 64, pero si lo pedí específicamente, tenés que hacer alguna trucuñela más, te delegan un barra 48. Y al delegarte un barra 48, te permiten que a través de este túnel, todo el resto de la IPv6, de una manera parecida, ¿recuerdan cuando ayer en una clase pasada que el resto de la IP sabe que vos tenés este prefijo? Por eso es que el ruteo viene hacia acá. En realidad todo HEE tiene un prefijo específico, barra 32. Fíjense, todo HEE es 2001.4.70/32. ¿Está bien esta dirección? ¿Por qué es barra 32? ¿Qué significa barra 32? No confundíse con barra 32 IPv4, esa era IPv4. Estamos ahora con ya cabeza IPv6. ¿Qué es barra 32 en IPv6? ¿Cuántos pedazos entre dos puntos son un barra 32 en IPv6? Es un cuarto del IPv6. Bien, pero recordemos que cada pedacito entre dos puntos eran 16 bits. Sí, el doble de IP, los pedazos entre dos puntos. ¿Quiere decir que un barra 32 son dos pedazos? Quiere decir que esto está bien, ¿no? El prefijo este 2001.4.70/32 es todo este proveedor. HEE, Curry Connected tiene un barra 32. Y después a su vez lo rompen pedacitos para ir prestándolos a quienes usan su servicio. Fíjense que nosotros nos ha delegado dentro de ese prefijo, dentro de ese gran prefijo 4.70/32, ha tomado 16 bits de ahí para identificar a nuestra red y nos ha delegado todos los 48 que restan. Entonces nuestro prefijo del cual tenemos pleno uso es 2001.4.70/9/48, del cual nosotros hemos usado la primera red de ahí, que es la 2001.4.70/dba9/0, lo hemos usado para publicarla dentro de nuestra subred donde tenemos nuestras maquinitas en la cloud. Pero es nada más que la primera barra 64 de estas. ¿Sí? Ahí la dirección dba9/0 todo. ¿No se puede asignar a ningún, a nada? Sí podría, Andarío. Lo podrías asignar al round. Es más fácil ponerlo en max. Cuando hablas con dispositivos, es más fácil ponerlo en max por todo el mecanismo que ya mencionamos. Y es conceptualmente más fácil, hay tantos bits. Son 64 bits. Dejemos el 0 dedicado a la identificación de red y pongámosle bits reales que me permiten mapear directamente la MAC de una manera mucho más simple. Claro, pero el default ahí no es una MAC. Es un 1. Perdón. Ahí es donde es. Ah, disculpame. Sí, correcto. ¿Por qué? Porque esta es la dirección del router. Perdón, te entendí mal la pregunta. Es muy correcto. Nosotros acá a mano, ya sabiendo que esta 2.1 no va a estar usada, porque ahí siempre se pone la MAC directamente, para no averiguar cuál es la MAC del router, a mano le hemos puesto el router, la pata del router en el enlace, le dijimos, le prendemos el 1. Le prendemos el bit. De una manera muy parecida, como antes decíamos, la .254, la .1 de la red, siempre se le dedicamos al router. Acá nosotros, pero por una cuestión de convención, también podríamos haber elegido la última, que sería... F, F, F. Después del 9, muchos F. 5. Ah, casi. Barra 64. Son 4 pedazos. Es decir, si nosotros, esta sería la primera de las redes, esta. Pero si hubiéramos elegido usar la última, por cierto, esta es equivalente, completémosla, así la vemos bien. Es equivalente a esta, ¿cierto? Donde esta es parte de red, hemos elegido la primera red, esta sería la segunda red, esta sería la tercera red, esta es la primera red del barra 48 que nos delegaron, que está ahí a la derecha en la pantalla. Sí, que acá dijimos que tenemos plena disposición de esto. Un barra 48 es 16 por 3. Quiere decir que nosotros, yo voy a highlightear, de lo cual nosotros somos dueños de esto. Y H, el proveedor nos dice, "hacé lo que quieras con el resto o distribuirlas como quieras". Yo te aseguro que te voy a routear todo lo que termine con W9, cualquier cosa que es el barra 48. OK, buenísimo. Me quedan 16 bits, que es todo un componente. Voy a hacer que la primera red es la que vamos a poner a clave. O bien podríamos haber elegido acá que sea la, no sé, la que tiene 23, elegimos fuera la primera. Quiere decir que ahí ya tenemos eso. Dentro de esa primera red dijimos, tenemos 64 bits que restan, le identificamos al router como la primera IP de ahí. Entonces ahora viene la pregunta, ¿cómo sería la identificación si hiciéramos lo opuesto, lo equivalente al .254 de IP4? ¿Cómo sería acá entonces? Recién lo respondían pero se te fueron demasiadas F. Eso sería así. Más feo, ¿no? Y además hay que tipearlo mucho más, porque se me embole. Sí, mal habido. Una cosa así. Fíjense, pero sencillamente por una cuestión humana de simplificación de notación es mucho más fácil decir "ah, el router es este, chau". Todo cero, ¡pim! El último bit en uno. O bien podría ser acá el último bit en, no sé, podría haber elegido dos, podría haber elegido, no sé, cualquier cosa, podría haber elegido "baby". ¿Sí? O "café". A ver si me despertan un poco. "Café", ¿sí? Son todos, este... O, no sé, "cacar". ¿Sí? Estoy poniendo "exo", no estoy jugando con eso nada más sencillamente porque sé que... Pero bueno, más fácil ponerle uno. Bien. Se entiende más o menos hasta acá, por donde vamos. Acá nos han delegado, nosotros hemos tomado, entonces hemos usado para la primera red, yo bien podría ponerlo así para que quede un poquitito más explícito. Los primeros 64 bits del prefijo delegado y ese último bit para el router. Pero en definitiva, la identificación de red, como bien la ven acá, es la dba9/64 que identifica esta red pública, porque ahora sí, todas las instancias que tenemos en la cloud tienen una IPv6 pública. ¿Sí? Estamos adverticiando, estamos publicando dentro de la red, los nuevos están levantando ese prefijo y le agregan el post fijo, la parte de host, construyéndolo a partir de su propio Mac. Eso es fabuloso, ¿no? Fabuloso. Entonces, si les interesan, a todos aquellos que no tenemos IPv6, crearse una cuenta en HE y jugar con esto está bueno. Fíjense que acá le ponen configuraciones de ejemplo de acuerdo al sistema operativo que tengan. En caso de Linux, esto recuerden, nosotros es porque le hemos hecho rosca a nuestro router para que automáticamente publique esto. Pero si ustedes están configurando su máquina final, quien proyectaba, bueno, recién quien proyectaba ya tiene IPv6 natural. Para aquellos que no tengan, este sería el pedazo de configuración que tendrían que agregar en el archivo este, netplanendingblah.yaml. Es decir, tendrían que editarlo y agregar esto. Es decir que yo me voy a mi máquina Linux, esto no lo tengo configurado, pero yo solamente les voy a mostrar qué es lo que ustedes tendrían que hacer en caso de que tengan Linux. Acá también le dicen en caso de Windows. Fíjense que es interesante porque les ponen los comandos. Por ejemplo, Linux Route 2, si ustedes copian y pegan... Me parece que me debo haber deslogueado de acá. Exacto. Voy a loguearlo. Un segundito. Fíjense que hay un interesante acá. Sin tener que configurar nada en un archivo, si ustedes agarran y pegan esto así, se registra en un HEE. Pegan eso y ya tienen IPv6 con eso. Si lo quieren permanentizar, perdón por el mal uso de nuestro idioma, en el caso de las máquinas Linux reciente, hay un NTC NetPlan, es donde se configuran las máquinas. Fíjense. Se lo voy a mostrar a modo de ejemplo nada más. NetPlan. Entonces ahí ustedes deberían crear un, no sé, HEE, IPv6, no importa el nombre, .yaml. O mejor, directamente. .yaml Y le meto el contenido. Esto ya se hacía brúticamente, copiando y pegando. Si yo después hago un NetPlan Apply, IPv6, me va a levantar ese archivo, me va a configurar, y fíjense que me ha configurado acá cuál es el local, cuál es el lado remoto, y cuáles son los adreces que yo voy a tener acá adentro. Y en particular, yo voy a hacer esta pata /64. Es decir, me estoy asignando a esta IP pública, porque HEE ya sabe cómo rutear de regreso a mí a través de este túnel. ¿Sí? Y así yo voy a remover ese archivo, para que no me haga ruido. Pero así es como ustedes se podrían autotunelear IPv6 usando este proveedor de tuneling de IPv6. Antes había mucho más, este es uno de los pocos que ha quedado. Y en todo caso, directamente, ya es medio tarde, así que la clase que viene arrancamos, vemos un poquito de XMP, vamos a ver que se parece mucho a 6, perdón, a 4, nada más que aparecen algunas cositas propias de IPv6, pero conceptualmente es muy muy parecido. ¿Y qué nos queda? Ah, y ver un poquitito más, con un poquitito más detalle esto de los adreces de la interfaz, esto que habíamos visto en la Mac, pero habíamos visto que no era exactamente igual, entonces, estudiar un poquitito ahí más cómo se configura la parte de host. Y ver un poquitito también de tuneling. Pero eso lo completamos en la clase que viene. Así que, lo que les sugiero entonces, sí, que esté interesante, créense una cuenta en HEE y experimenten ustedes, tengan IPv6, y como milestone sería espectacular que ustedes se pudieran loggear a sus instancias de la cloud a través de IPv6. Para la mayoría de nosotros que no tenemos IPv6 natural en nuestra red hogareña, a través de HEE. Que es Tunnel Broker. Se los copio en el stack. Y creo que por hoy estamos. ¿Alguna duda, muchachos? Lo que seguramente tienen muchas, pero alguna específica de lo que acabamos de hablar. Yo tengo una de, no de esto, pero de la clase pasada, el profe, el Diego, nos dijo que viéramos el video de "Un día en la vida de un ingeniero" de Netflix, pero no lo pasó nunca, el video. Y estaba viendo cinco capítulos de como una hora, no sé cuál, o todos, o... ¿Ah, sí? Sí, no me acordaba que fueran tantos. Hay dos cosas. Yo he visto, hay un flaco en YouTube que ha hecho una vía, "Un día en la vida de..."