Bueno, para recordar en dónde estamos parados, hoy vamos a continuar con nuestro viaje por el protocolo IP y vamos a dar inicio a un tema que es para nosotros el más importante de las funciones que tienen. Recuerden que estábamos viendo el protocolo IP y un poco habíamos ido sintetizando cuáles eran las funciones del protocolo IP y cuál era su misión. Hemos estado mucho arriba de la parte de la abstracción lógica y nosotros decíamos que eso se lograba a través de que a nivel IP, cómo se ven todos los miembros de una red IP, qué es lo que tienen para poder participar y lo hace miembros. Hola, ¿están ahí? ¿Una IP? Una IP. Dijimos que la capa, el protocolo IP, por las cosas que vimos en la clase anterior, nos ofrecía una abstracción de la red, básicamente para el protocolo IP y todos los que están arriba, los que juegan en una red IP tienen un número IP. Y eso da una capa de abstracción que es una misión súper importante y una muy excelente decisión de diseño. A su vez vimos que sobre esto teníamos una jerarquía, el direccionamiento IP nos permite saber quién es miembro de mi misma red. ¿Cómo se llamaban los miembros de mi misma red? Como le decimos nosotros. Vecinos. Quiénes son vecinos y obviamente vamos a ver que hay algunos que no son vecinos. Y la otra misión importantísima del protocolo IP es justamente esa. ¿Qué va a ocurrir con aquellos, si yo necesito contactar a alguien que no es vecino mío? Entonces la misión del protocolo IP, que es la que vamos a hablar hoy, es la del encaminamiento o el ruteo o routing, usando las palabras en inglés, que es el protocolo IP es el responsable, el encargado de resolver cómo los datagramas se encaminan hacia el destino. Y cuando decimos se encamina hacia el destino, es se encamina hacia el destino cualquier IP que sea del destino. Para eso, si yo les dijera, bueno, ¿quién es el encargado de que estos paquetes, ustedes están de acuerdo que estos paquetes que llevan nuestra videoconferencia se mueven por una red IP o no se mueven por una red IP? Sí. Ajá. ¿Y la red IP más grande qué hay? ¿Cuál es? Internet. Y la internet, digamos. Claramente muchas de estas cosas son muy sencillas de explicar. Y bueno, ¿y esto andará? Y evidentemente anda, porque si no, ni nos estaríamos viendo ahora. Así que, bueno, imagínense, hay en todos los lugares, y eso es un poco lo que vamos a hablar hoy, es ¿quiénes hacen ese trabajo de encaminarse hacia el destino? ¿Quién hace el trabajo de que estos datagramas lleguen al destino? El router. Ajá. Y los routers son bichos de otra especie distinto que hay en una red. Router o ¿y los otros qué son? Si no son routers. ¿Un switch? Hola. A ver. Hola host. ¿Switch o host? ¿Switch? ¿Qué capa? ¿Switch? Dos. Dos. Entonces nosotros no estamos hablando en esta capa. ¿En qué capa estamos hablando? De tres para arriba. Claro, ¿en qué capa juegan los que juegan con IPs? En capa tres. En capa tres. En la tres, digamos. Deme un segundito. No sé si vos podés continuar un segundito, Juan, que tengo que atender un temita acá. Sí, claro. Bien, capa tres. Recordemos rápidamente un poco que TCP tenía cuatro capas en realidad, pero está bien que hablemos de las capas ISO. La capa que vemos... Ah, yo no tengo control de lo que se está proyectando. Déjeme ver si puedo cortar y tomar... Capaz que sí. Un segundito. Un cachito. De tal manera que se vea mi mouse cuando lo señale. Vamos a ver si puedo robar la proyección. Vamos con una ventana. Reemplazar. Bien. Ventana de la ventana. Dígame si se ve. Está cargando. Ah, bueno. Y se ve mi mouse, ¿no? Es como para confirmar. Sí, sí. Perfecto. Bien. Entonces, recordemos rápidamente que acá en realidad TCP, fíjense que acá está dibujado cuatro capas, enlace, red, transporte de aplicación. Pero en términos dos, sí, acá estamos en la capa tres. Lo importante entonces, lo que estábamos remarcando recién es que las únicas partes que implementan todo el stack de protocolo hasta arriba, incluido la aplicación, son las puntas. Son lo que serían los que se suelen denominar end hosts, o nodos, terminales, o tiene un montón de denominaciones. Pero todas las partes del medio, lo que técnicamente se denomina sistemas intermediarios acá para poder llevar un datagrama de punta a punta, solamente necesitan implementar hasta capa tres, como bien dijeron. Lo que vamos a ver hoy fundamentalmente es cuáles son las características que tiene la implementación de esto. Vamos a poner, si se quiere, la lupa en los routers para ver qué es lo que necesitamos que implementen, qué tipo de lógica, qué tipo de lógica de decisión, de encaminamiento, de reenvío, de datagrama necesitamos que existan en estos routers. Para que cumplan su rol, y su rol es sencillamente servir de alguna manera de encaminamiento, de secuencia, para que si este host de la izquierda pone un datagrama con destino al host de la derecha, todo el conglomerado de estos routers conectados antes sí sean capaces de resolver esa entrega. Llega por aquí y se entrega al host destino. Una pregunta, me parece que lo habíamos hablado en la clase pasada, pero me disculpan si ya lo había preguntado. ¿Qué significaría que estos routers se implementaran más arriba de capa tres? Estamos en el contexto de que, recalcando el hecho de que solamente hace falta que se implemente hasta capa tres, porque es capa de red, yo estoy preguntando a modo de completar la idea, si estos routers se implementaran más arriba de capa tres, ¿de qué serían capaces? Voy a cambiar la pregunta un poco. Justamente por estas capas nosotros sabemos que una aplicación es capaz de comunicarse con otra aplicación aquí. Y si quiere, las que se comunican, capa siete, estas aplicaciones hacen uso de todos estos stacks de protocolo, en el caso de TCP hace uso de la capa de transporte, de la capa de red, de la capa de enlace para poder enviar ese datagrama y construir en una, usando una secuencia de datagramas, un conjunto de datagramas, construir algo lo más parecido a una conexión. Esta aplicación, hablando con esta aplicación, yo desde acá, desde mi browser, navegando Google, ¿sí? A través de usando el protocolo de aplicación al JTP. Y en el medio solamente necesito que estas cosas, que solamente entienden hasta capa tres, para lo que yo necesito usarla, me reenvíen datagramas. Entonces yo lo que le pregunto, si proveyéramos a esta de las capas acá de más arriba, ¿sí? Si el router le ponemos capa cuatro, o si quiere capa de transporte y capa de aplicación, ¿qué podría hacerle ese router entonces? Y ¿podría hacer redes a nivel de software? No, eso sería más bien, bueno, a ver, ¿es un router más inteligente? ¿Le pondría un cráneo a ese router y podría de alguna manera, lo que vos estás diciendo es que es más o menos una consecuencia, pero a ver, tal cual está la figura ahí, lo voy a preguntar más sencillo. ¿Yo me puedo conectar, entre comillas, lo que siempre se dice así, medio como dice mi colega en forma de brujo, ¿me puedo conectar al router? Tal cual está lo que estamos presentando. ¿Vos estás presentando ahora, Diego? Me parece que tomaste vuelta la presentación. No, yo me paré en esa diapos nada más. Ah, listo, listo. Así se los pregunto de una manera simple, ¿me puedo conectar al router ahí? Tal cual está ese dibujo así. No. ¿Por qué? Me parece que sí, pero no sé. Yo por lo que veo, creería que sí. Interesante, ¿y quién me atendería en el router? Pues si yo me conecto, cuando digo conecto, es voy a establecer alguna sesión, ya estoy hablando capa 5, porque es una conexión, transporte, sesión, aplicación, porque me voy a conectar yo como humano para hacerle algo al router como configurarlo, por ejemplo. Me estoy espoliando la respuesta, pero no importa. El tema es, tal cual está ese dibujo, yo me puedo conectar al router? ¿Tiene cerebro de transporte? Y no faltan esas capas. Ah, ok. Entonces no me puedo conectar al router. ¿No le puedo hacer nada más que a lo sumo un ping? Sí le puedo, por supuesto, tal cual está dibujado ahí, decirle, che, reenviame ese datagrama, haceme que estos datagramas fluyan. Si acá sale, te llega un datagrama en esta patita de la izquierda con destino al host que tenés a la derecha, perfecto, el tipo tiene el cerebro capa 3 como para decidir, preguntar, ah, tiene que salir por esa interfase y este ñato de la derecha es mi vecino, se lo entrego, lo descubro y plim, y terminó mi rol de este router como un elemento de capa 3 dentro de toda esta internet. Claro, necesitaría capa más alta para poder configurarlo, para poder... Claro, para poder de alguna manera, en comillas, conectarme al router, entrar al router, decirle, mirá, ahora te voy a cargar esto, te voy a configurar esta interfase nueva, te voy a dar de baja esta otra interfase, y para eso, si se quiere, para administrarlo al router, decirle capa administrativa al router, porque yo no voy a instalarle un web server al router, no voy a instalarle un motor de búsqueda al router. Como si podría instalarle este host y es suficientemente interesante su infraestructura, puedo instalarle un Apache, puedo instalarle un PHP, hacer aplicaciones, pero no es el objetivo si este router tuviera capas de más arriba, el objetivo sería que esas capas de más arriba me permitan administrarlo tal que yo la aplicación que usaría para hablar con el router, con estas que no están acá, sería un Secure Shell o algún tipo de interfaz Graphion, con UI, a través de HTTP, con alguna interfaz bonita para poder decirle al router, mirá, te prendo tal cosa, te apago tal otra, te agrego tal IP, te saco tal otra. Solamente quería declarar eso antes de lo que viene, porque es importante separarle estas vidas, no, serían estos roles al router, no para el rol que nosotros estamos pidiéndole ahora, el router alcanza con que tenga cerebro capa 3. El problema es cómo configuro ese cerebro capa 3, que es para buscar las capas de arriba para poder conectarme con el router, administrarlo al router. Sí. Entonces los routers de nuestra casa en realidad tienen hasta capas de aplicación, por ejemplo, que yo pueda entrar a configurar y todo. Recordemos que cuando hablamos de routers en nuestra casa estamos tirando el concepto, que es una caja que tiene, en realidad tiene un switch, porque atrás tiene unos puertos de Ethernet típicamente, cada vez hace de un switch virtual con la capa wireless, con lo cual provee en realidad servicios de capa de enlace en el 802.11 para lo que es wireless, pero además también tiene capacidad de routeo, tiene capacidad de NAT, tiene firewall y demás. Eso que está explicando Juanjo y que acaba de preguntar, creo que era Fernando, me parece que, no, Alejandro. Alejandro, me parece. Es muy buena pregunta y a su vez hace mucha referencia al por qué de esta materia. Y ustedes como ingenieros tienen que verlo, digamos. Muchos dispositivos que nosotros vemos empaquetados en algo hoy son la suma de un montón de funcionalidades que en definitiva están referenciados por estándares de cosas distintas. Que la mayoría de la gente diga, compré un router, y un poco el objetivo de esta parte que nosotros estamos mirando solo el routeo en IP, digamos, no estamos hablando del router que ustedes compraron y pusieron en la casa. Estamos hablando de la función de routeo. Es muy importante que ustedes identifiquen a dónde va la cuestión estándar. ¿Por qué? Porque en realidad todos los dispositivos actuales son extremadamente complejos y son sumas de piezas. Hoy yo puedo comprar un dispositivo y ese dispositivo trae hasta un filtro anti-spam y está en el borde de mi red y no puedo decir, ah, bueno, como está en el borde de la red, es un router. No, es un anti-spam. Es una cosa que está mirando cuestiones de capa de aplicación. Y ni sabemos las cosas que se van a inventar a futuro, pero está claro que los modelos de referencia van a seguir estando ahí. Yo solamente a modo de muestra, en realidad nosotros estamos siendo muy gentiles al decirle, tiene funcionalidad de reencaminamiento de router, pero si quiere un router que forma parte de, que está en un ISP, por ejemplo, no va a ser una cajita como esta que nosotros compramos. Es más parecido a esto, ¿sí? Que tiene muchas bocas, muchas interfaces. Es solamente como para traerlo un poco a la realidad. Es decir, es como que nuestro router, nuestro AP router y demás, como que tiene todo englobado esta funcionalidad. Y para responder a tu pregunta, sí tiene implementado hasta capa 7 porque si yo tengo las credenciales adecuadas, yo puedo abrir un navegador, conectarme a la interfaz administrativa de ese AP más router que tengo en casa y cambiarle cosas. Dependerá de tu ISP si te ha dado esa capacidad o no. Hay ISPs que te dan esa capacidad, te dicen "sí, acá te la pago el administrador" y podés entrar y ver los parámetros de trabajo, podés, lo típico que es mapear un puerto desde la IP pública que quizás tu ISP te esté dando hacia adentro para, qué sé yo, torrents o juegos que requieren que vos tengas presencia con una presencia externa. Entonces, para esa administratividad sí o sí, necesitas más arriba de esto. Más arriba de esto porque si no, no va. Te dejo acá para hacer trabajo, digo. Sí, sí, sí. Lo importante, y ahí va, no lo importante. En realidad es, yendo a la simpleza de... Una pestaña, esto. Bien. Los diseñadores, en general, esta diapositiva es un clásico. Ustedes tienen que entender que en redes, en general, está muy separado arquitecturalmente lo que son los sistemas finales de las comunicaciones a los que son los sistemas intermediarios. Pero esto es un patrón común en redes que se aplica incluso en muchas capas. Si yo les pregunto a ustedes, ¿cuál es el sistema final en una red celular y cuál es el sistema intermediario en una red celular? Si ustedes lo piensan dos minutos, dicen, no es lo mismo uno que otro. ¿Cuál es el end system en una red celular? El teléfono. El celular. Y quiénes, es decir, es una red peer-to-peer, digamos. Ustedes hablan de celular a celular o hay alguien en el medio? Una antena. Antenas. Por eso. En realidad vemos la antena como materialización, pero en realidad la antena son switches, son conmutadores de comunicaciones. La palabra switch, cuando nosotros decimos switch es un conmutador. Es un conmutador de comunicaciones. Si yo le dijera a ustedes, ¿se entiende, no? Que es distinto cuando uno hace una red, cómo es el dispositivo del end system y cómo es el sistema intermediario. ¿Se ve? Sí, sí. Incluso los diseñadores en IP fueron sumamente inteligentes en, y está repartido en todo el diseño de los protocolos que vamos a ver. Asumiendo que, algo que yo les pregunté a ustedes, ¿cada cuánto creen que se cambia uno y otro? Y a su vez, ¿de cuál hay mayor población? Los end systems son los que hay más y que se cambian más frecuentemente. Y bueno, después los intermediarios son los que duran más tiempo y como dijo hay menos. Ok. ¿Y quiénes son los que agregan, los que si yo quisiera agregar features, funcionalidades nuevas, tendría que actualizar? Probablemente. El end system. El end system, sí. Entonces no es menor esta decisión. Porque si ustedes la toman al revés es un lío. Si ustedes dicen, mira, yo voy a pensar, voy a hacer una tecnología, vamos a estar agradeando cada cosa nueva que hagamos, vamos a tener que tocar todos los sistemas intermediarios. Es algo que... Claro, por eso, pero desde el punto de vista del diseño, eso obliga a que ustedes digan, bueno, mirá, ok, lo que vamos a diseñar, hagamos que contemple la mayor cantidad de funcionalidades y sea lo más simple y eficaz, de manera que no tengamos que estar tocando de acá hasta N tiempo. Entonces, también un poco lo que le estaba mostrando Juanjo es, la verdad que la internet completa funcionaría igual, de hecho funciona igual, con el IP estándar, con el protocolo IP estándar que está escrito en los RFC hace 20 años, 40 años. Incluso la internet que usamos ahora. ¿Está bien? Y los end systems, piensen cómo cambiaron los end systems en la historia de la internet. Cómo era el end system de los 80 y cómo es el end system de hoy. Sí, no tienen punto de comparación. Ok, ok, ¿no? Y la función que realmente ha garantizado que eso ocurra es la que vamos a hablar ahora, que tiene que ver con, bueno, ¿qué es lo que hay que lograr hacer para que esto ande? Si yo le digo, bueno, listo, el protocolo IP, misión y esto es lo que quiero que resolvamos entre todos. La misión del protocolo IP es encaminar los datagramas, que es la palabra que le damos a los paquetes IP. ¿Cuál es el problema realmente? Yo tengo que encaminar el datagrama al destino y esto es lo que vamos a repetir 800 millones de veces. IP es un protocolo encargado de encaminar los datagramas al destino. Y eso, y acá está la otra regla que es valiosísima, es un problema que se resuelve salto a salto en una red IP. Esto ya se lo ha hecho varias metáforas Juanjo muchas veces. Es como si yo le dijera, che, tengo que pensar cómo hago. Yo les digo a ustedes hoy, es el mismo problema pensar cómo van a salir de sus casas para llegar hasta el Empire State de Nueva York. Le digo, mira, haceme, ¿cuál es el plan de todos los caminos que vas a hacer? A decir, che, andate al Empire State. Y usted diga, bueno, yo voy viviendo, salgo hasta el aeropuerto y en el aeropuerto pregunto. El mismo problema en complejidad. ¿Cuál creen que es salto a salto y cuál es el otro de punta a punta? El salto a salto es el mochilero. El mochilero. Bueno, es muy buena metáfora la del mochilero. Es buena metáfora. Es decir, IP a su vez, ¿cómo va a resolver ese problema? Lo va a resolver salto a salto. Es decir, se va a ir preguntando en cada... ¿Cuándo hay que preguntarse por dónde agarrar? Cada vez que presente qué. ¿Imaginen? Caminas distinto. Una bifurcación, es decir, che, yo llegué a un lugar y voy a... Y entonces hagamos lo que lo hacemos, nos vamos a ir manejando de acá a Nueva York. ¿Con qué se van a informar ustedes? ¿O qué van a ir haciendo para hacer eso? Creo que habíamos... Había dado el ejemplo de que vamos preguntando en cada esquina para dónde tenemos que doblar. Y si tuviéramos que usar un sistema de soporte e información que... Voy a traer... No voy a ir de acá a Lempareste, pero si le dijera, estamos acá en Mendoza y le vamos acá a Buenos Aires. Y ustedes van manejando. ¿Tienen que realmente preguntar o existe un sistema de soporte? GPS, bueno. No, bueno, olvídate del GPS. Los carteles. ¿Qué hay en los carteles en la ruta? Información. Indicadores. ¿De qué tipo? Distancias, ciudades. Es una información que ustedes dicen, ah, listo, yo llego al cruce, miro el cartel, ah, Buenos Aires para allá, listo, Buenos Aires para allá. Entonces yo estoy con el destino en la cabeza y cada vez que llega una bifurcación alguien me da un soporte para decidir para dónde voy. Ese sistema de calle así, ¿es global? ¿Funciona en todo el mundo o solamente anda acá, en Argentina? Global. Es decir, es un sistema de encaminamiento global. Evidentemente funciona, ¿o no? Sí, sí. ¿Y cómo funciona? Bueno, en la ruta, la ruta es un sistema de encaminamiento global. ¿Cómo funciona? Bueno, la ruta es un sistema de encaminamiento global. ¿Cómo funciona? Bueno, la ruta es un sistema de encaminamiento global. ¿Cómo funciona? Bueno, la ruta es un sistema de encaminamiento global. ¿Cómo funciona? Bueno, la ruta es un sistema de encaminamiento global. ¿En dónde cae esa decisión? ¿Quién tiene que tomarla? El router. Solo el router. Por ejemplo, acá nadie decide nada. Ni de los hosts, ¿no? Se ha enviado el mensaje y... ¿Y cómo lo envió? Porque el host también tiene que tomar una decisión. Pero el host es el que dice... Claro, entonces tenemos un algoritmo para los hosts, que es un algoritmo distinto al de los routers. ¿Por qué asumen ustedes? ¿Cómo sabe un host que no tiene que hablar con alguien que... Y a su vez, ¿qué va a hacer si no sabe? ¿Ustedes vieron? Hay una RFC para hosts y otra para routers. Son distintas. ¿Hola? No, no son distintas. Entonces... Bueno, no nos vamos hoy hasta que no hagamos el algoritmo. Así que empiecen a pensar porque yo voy a abrir la pizarra. Tenemos que resolver este problema. Digamos, el que no sabe, el que no sabe, el que no sabe. Pizarra, tenemos que resolver este problema. Digamos, el que no ha encomendado. No se puede ir nadie hoy sin escribir el algoritmo de ruteo de IP. Y el host indica cuál es el destino y... No, no, no, no, pero eso lo dice un brujo. Yo quiero un algoritmo. ¿Qué hace un algoritmo? ¿Cuál es la definición de algoritmo? Pizarra nueva... Puedo seleccionar una de drive, me dice acá. Recientes. A ver si me deja abrir una pizarra reciente. Hacemos una pizarra nueva. Uy, esta está más fiera. Voy a hacer una nueva, me parece. Está escrita a mano. La voy a hacer nueva. Pizarra... Abrir una jam. Nueva pizarra. Voy a compartir mi pantalla. Compartimos con todos. Confírmenme que estamos viendo lo mismo. No me dejes que haga cuchinada, Juanjo. Haceme que escriba bien. Así no sirve después. Voy a buscar la pizca. Por las dudas en la presentación no se ve en el mil, digamos. Ok, ahora ya les voy a prestar mi pantalla completa. Sí, esa estaría buena porque si no, como para seguir lo que se va haciendo. Toda mi pantalla. A ver ahí. Pero antes de hacer eso, tengo que apagar todos los mensajeros que tengo prendido en mi máquina. No me vaya a molestar nadie. Ahí está. Ok. Confírmenme que vemos lo mismo. Ahí está. Sí, perfecto. Se ve todas tus pantallas. Ok. Bueno, entonces lo que estábamos hablando es que... Y un poco lo que queremos construir con ustedes. Ya hemos dado algunos lineamientos. Sabemos que existen sistemas finales y existen sistemas intermediarios. Una ayudita es... No es la misma la tarea... Fíjense que ahí en la diapos está declarado que la... La misión del ruteo está como dividida en dos funciones. Una es el encaminamiento, es la decisión por dónde ir. Y otra es el reenvío. Es decir, un router le llega a un paquete, en este caso por ejemplo, le llega en este caso y decide, le llega a un paquete, toma la decisión y dice "Ah, este lo tengo que mandar para allá". Lo reenvía. Y esa es prácticamente la función que diferencia a un host de un router. El host no reenvía paquetes, no recibe paquetes que no son para él y decide mandarlos para otro lado. Tiene sus paquetes, pero también tiene decisión de ruteo, tiene que decidir por dónde mandarlo. Es decir, que el problema de ruteo es el mismo para un host que para un router. Es más, lo que nos han encargado es que hagamos un algoritmo que banque las dos funciones. ¿Me explicó? Sí, bro. Entonces quiero que pensemos por dos minutos, si esto es un algoritmo, ¿qué tienen los algoritmos? Pasos a seguir. Una sucesión de pasos ordenados que cumplen una tarea. ¿Y qué más tiene? Andan solos. Digo, algoritmo es porque hace un programa. Les pregunto a ustedes, el router, ¿cómo toma la decisión? Está en un chip. ¿Dónde está la decisión? Analiza variables. Pero les pregunto a ustedes, ¿no creen que está corriendo un programa, un router? Sí, tiene. Tiene un software. ¿Tiene sistema operativo el router? Sí. Y ya vimos, ya hablamos de esto. El sistema IP, el protocolo IP. Es del sistema operativo. Es parte del sistema operativo. Es decir, que así como toma decisiones de cargar algo en la memoria y moverlo de un lado para el otro, tiene que tomar decisiones de red, el sistema operativo. Sí. Entonces estamos hablando que alguien programó lo que los diseñadores del protocolo IP pensaron, que dijeron, mirá, encaminamiento, salto a salto, para, pa, pa, pa, pero después hay que programarlo. En realidad, ¿ustedes saben cómo son la historia de los RFC? Los deben haber visto en algún lado. ¿Saben lo que es un RFC? Creo que no. Ah, no lo vieron en ningún lado. Bueno, la Internet completa está basada en estándares, ¿sí? Que están numerados, y esos estándares en el mundo de la filosofía de Internet se llaman RFC. Que en realidad RFC es "Request for Comment". Es decir, alguien se levanta hoy y dice, "Che, tengo una idea", y escribe. Con una etiqueta, con un formato, dice, "Che, mi idea es esta". "Miren, busquemos la RFC IP, RFC 791". ¿Quién la hizo esta? ¿Dio? "Ah, ¿quién hizo esta RFC?" Un ingeniero. ¿Ah? "Information Science Institute, University of Southern California, ti, ti, ti, ti". Entonces dice, "Casi todas las RFC son iguales, por eso es importante aprender a escribir". Como estamos tratando de hacer. "Miren la fecha, septiembre de 1981". Esto es como si fuera un apóstol para nosotros. John Postel, este flaco, no solamente hizo esto. Hizo el sistema de nombre de dominio, por ejemplo. Escribió la RFC esta, la IP, e hizo el sistema DNS. Entienden lo que es el DNS, ¿no? Esa piecita que hace que usted ponga "W, WB, WM, WB" y no tenga que estar pensando en IP. Sí. Bueno, ¿cómo hizo? Él escribió esto. En realidad, lo que iba a decir es, "Los RFC tienen una descripción". "Ti, ti, ti". Esto dice, "La IP describe muchas de las cosas que nosotros les estamos contando a ustedes". Las capas, van a ver. Les aseguro que es una buena práctica leer RFC. Acá es donde la primera vez que se habló de lo que era un gateway. Acá habla de muchas de las cosas que estamos hablando nosotros ahora. Esto es algo que vamos a ver en la clase que viene, como es el datagrama IP. Tuxi, las opciones, Sara, PP, papá. Y las RFC se acompañan con código funcionando. Con una implementación. "A mí me parece que habría que hacer..." No, no, pará. "Voy a hacer la RFC y me escribiré un pedacito de código que muestre la prueba de concepto de lo que está hablando". ¿Está bien? Que es un poco lo que le estamos tratando de pedir. Estamos pidiendo un algoritmo, no nos vamos a poner a escribir algo de código en C, o en Java, o en lo que les guste. Por eso el mundo de Internet funcionó. Porque no es un mundo de gente que, "A mí me parece, y la norma, y la revisa, otro es..." En realidad, alguien pensó algo, construye una implementación con una prueba de concepto, se mejora, y si todos están de acuerdo, yo chiste a prueba. De esto va como va, la usémoslo. Poner el número, 791, chau. Sale. Todo tiene RFC. Miren. Esta es la RFC de HTTP. Si ustedes mañana quieren hacer un web server, rellen esto y construyen un web server. Porque si yo tengo que hacer que todo el HTTP, listo, acá están los verbos, los métodos. Todo tiene RFC. Por eso nosotros, quizás, hemos asumido mal, que ustedes entendían. Van a ver que cada protocolo que veamos tiene la referencia al RFC. El RFC es, alguien escribió la idea, especificó la funcionalidad, construyó una implementación funcional con código funcional, y bueno, los mecanismos que tiene la Internet Society, que sería el contenedor de todo esto, que en realidad la parte que hace todas estas cosas se llama la... La IEEE. No, no es la IEEE, es la Internet Task Force, la ITF, que es la que tiene organizados los grupos, que son los que evalúan las RFC, y hay grupos sobre temas distintos. Pero cualquier persona puede proponer una RFC, en realidad no termina, en realidad tiene un nombre previo a hacer una RFC, pero cuando alcanza el nivel de acuerdo suficiente de un grupo, que es totalmente distribuido, no está centralizado, se aprueba una RFC. Y después alguien dice "che, mirá, yo quiero hacer algo que soporte IP". Bueno, lo único que tengo que hacer es implementar lo que dice la RFC. Y si lo voy a hacer en un sistema operativo nuevo, o voy a programar un tubo fluorescente que soporte IP, o una licuadora que ande IP, bueno, la puedo programar, mientras respete la RFC, yo sé que va a hablar con cualquier otra cosa que respete la RFC. Así es el mundo de la ingeniería en general, y ustedes tienen que ser bastante puristas con los estándares. Cada vez que construyan algo, primero no inventen la rueda de cero, sino que refieran a un estándar, porque los estándares empoderan las cosas que construyen. Si usted dice "no, yo hice mi propio algoritmo, yo estoy seguro que es muy seguro, porque lo pensé muy bien, pero ¿y qué estándar tiene? No, no, no, el mío es muy bueno, pero le hice eso". Bueno, seguramente están en una, no invalida que se les pueda haber ocurrido algo bueno, pero probablemente muchas cosas ya están, y sea mucho más valioso que las soporten con un estándar, sino tienen que defender con su espalda, y no es lo mismo. En ingeniería, mucho de lo que nos da sustento son los estándares, y es importante saber cuáles son los estándares de las ramas de las cosas que hacemos. No sé si me explico. Para que usted sepa, JWT, que lo deben haber visto en algún lado, ¿saben lo que es un JWT? Sí, sí, sí. Bueno, tiene una RFC. Yo solamente quería hacer un plug respecto de un par de cosas, respecto de la naturaleza abierta de los estándares, y que básicamente el Internet no sería lo que es hoy, si esto lo hubieran agarrado los que hicieron los protocolos anteriores, para los cuales tenían que pagarnos, no sé, mil dólares, para recibir la especificación, no participaba, era como estaban entregados por alguna entidad supernatural y bajaba el estándar, ¿no? Versus esto, las RFCs, hasta el mismo nombre, "Request for Comments", no es "This is the law", esta es la ley. Y si ustedes lo piensan, es importante la comparación porque para el momento de tiempo que estábamos hablando, años 80, todos los otros protocolos de comunicación eran básicamente desarrollados por comité, por entidades, así de poca gente, bajo control, que escupían especificaciones de protocolos para implementarlos. Fíjense, la naturaleza abierta de los estándares permitió al Internet ser lo que es hoy. Y si uno lo ve quizás de una forma más expansiva, y lo comparamos con las APIs hoy, las APIs más abiertas y con más cantidad de usuarios también a la vez, son aquellas que crean ecosistemas enteros. Cuando digo APIs abiertas, por ejemplo, no sé, vos querés autenticar a un usuario y no querés vos hacerte cargo de crearle la clásica, otra vez se tiene que acordar del usuario y password, o sea, enlazar con autenticación contra Facebook, o contra Google, o contra Twitter, o contra GitHub, entonces yo voy a consumir esas APIs, que no han sido desarrolladas de una manera abierta, eso sí hay que admitir, pero que están de facto abiertas, expuestas, para que se usen. Y que yo, como consumidor de esas reglas, estoy cambiando muy violentamente la altura en el stack donde estoy, pero lo que quiero resaltar es que APIs que son visibles, o especificaciones que involucran protocolos que son visibles, que son abiertas, crean ecosistemas enteros alrededor de eso. Y eso que ocurrió con todo el stack de CPIP, lo podríamos comparar un poco con las APIs también. ¿Qué es lo que está pasando con las APIs? Nada, una acotación. Bueno, tomamos esta derivación porque estábamos hablando de... Imagínense que acabamos de escribir la RFC, tenemos que decir cómo es el algoritmo para que esto rutee. Y estábamos haciendo el viaje, les decía yo, si yo tengo que hacer un algoritmo, una serie de pasos, ¿esos pasos sobre qué trabajan? ¿Sobre el sistema operativo del router? Bien, perdón, me fui a la definición del algoritmo, eso va a correr en el router, va a ser un programa, el algoritmo codificado en un lenguaje se transforma en un programa. Este algoritmo, ¿el algoritmo con qué trabaja? Pasos que hacen, ¿con qué? Solo toma decisiones sin ninguna... ¿qué? No, tiene que tomar los datagramas. Ok, pero justamente estamos haciendo la pieza que tiene que resolver la decisión de ruteo. Que camina, ¿no? Sí, recibe información de los demás caminos. Pero, para, por eso, pero vamos a identifiquemos el problema. ¿De dónde va a sacar? Es decir, ¿qué es lo que recibe como para tomar la decisión? Alguien dijo ahí. Y yo les dije, el ruteo se decide por el destino. ¿Qué es lo que tiene que mirar? Tiene que mirar el destino del datagrama. Bien, es decir, que yo tengo como entrada de este algoritmo, la decisión de ruteo la va a tomar mirando, ¿qué cosa? El campo de la IP. La IP del destino de un datagrama. Ok. Entonces, tengo un... voy a poner por acá. A ver cómo que puedo escribir. Con este puedo escribir. Si yo dijera, bueno, ¿cuáles son los datos? Del algoritmo. La IP del destino. Bien. Yo acá tengo IP destino. ¿Sí? También tiene que mirar la cantidad de saltos que lleva ese datagrama para decir si se logra o no. ¿Por qué? Porque después de qué cantidad de saltos no lo descarta. Bueno, pero estamos... eso para alguien que construye la solución de un problema de la manera que yo razono es un problema para después. Primero tengo que hacer que rutee, después veamos las optimizaciones. No digo que no esté mal. Sí, no solo optimización sino validación de input. ¿Qué pasa si viene fruta, si viene verdura en esa dirección IP destino? Porque no todos los... si yo te doy una secuencia random de bits y se lo pego a una dirección IP, no todas las direcciones IP son válidas per se. Entonces, es un proceso incremental, ¿no? Vamos a lo fundamental que es cómo implementamos el ruteo y después lo vamos perfeccionando. No sé, supongamos que la IP destino es 120. Eso es datos. Sí, la verdad que a mí me llega un datagrama y le miro el destino. Ahora, ¿con qué creen que se toma la decisión? Hay algo más que es información que yo... Imaginémonos que estamos en el host, en un host inicialmente o lo que sea. ¿Hay alguna información que yo tengo que usar adicional para devaluar esto? La red a la que pertenezco. Bueno, llamémosle configuración. Yo tengo configuración. Digamos que tengo una placa, ¿no? Como vimos el otro día, tengo la placa Ethernet 0 y yo estoy en la red 192. Yo soy 200, no sé. 20. Y mi máscara es /24. Esto es contexto, digamos. Resulta que a mí me llevo un datagrama que dice que va a la IP 120 y yo soy 220/24. ¿Qué hacemos? Y primero, ¿no podría ver si la IP destino está en mi misma red? A ver. ¿Cuál sería la primera pregunta? Si yo les pregunto que tenemos este dibujo y les digo "hagamos un dibujito acá de..." A ver si dibujo. Habría que ver a quién estoy conectado físicamente. Bueno, pero acá ya tenés esa información. ¿Quién sos acá? Si yo les digo "hagamos un dibujo de esto". Y es un host. Este es un host, que es el... El 220. No quiero arruinar porque después me da vergüenza mis dibujos y los veo y digo "me mata el Parkinson". Con respecto a la gente que tenga Parkinson, pero... A ver una forma. Bueno, ahí está. Esto si lo veo así, este es el host. ¿Qué le pongo acá abajo? 200.20/24. ¿Por qué hace esto? ¿Por qué hace esto? ¿Orden? No me deja... Ah, mira vos. Si lo ensancho, después lo puedo achicar. ¿Está bien este IP? 2200. Ahí. Si partimos de más o menos de este escenario, yo les pregunto. Si este flaco es el 220/24 y por alguna razón necesita hablar, ¿con quién quiere hablar como destino? Con el 120. 120. Así a simple vista. ¿Qué pasa con el 120? No están lo mismo, ¿verdad? No es destino. Entonces, si yo le estuviera que decir "che mira, esto anda, en realidad hemos armado las cosas para que anda". ¿Qué le faltaría a este esquema? ¿Qué debe haber acá? Un router. Bien. A ver, vamos a hacerlo con un rectángulo. Acá probablemente tenga que haber un router. Voy a hacer... Si este host confía que este router le puede dar una mano para llegar al destino, ¿cómo es este host? ¿Qué tiene que ser? Vecino. ¿Y qué sería que sea vecino en el mundo IP? Que tenga la misma manga. Que tenga un barra 24 nomás. Y ustedes dijeron la misma máscara. Y tiene que estar conectado físicamente para algún medio. ¿Y qué más? Si, tiene que estar conectado de alguna forma, ¿y qué más? ¿No había una manera? Creo que era un OR con los bits, la máscara. No, no, no. Sí, sí. A ver, lo que estamos es... Estoy tratando de dibujar cómo es si esto anda. Yo le dije "bueno, partamos del supuesto que esto anda". Pero acá faltaría alguna data de cómo es que el router es vecino. ¿Qué debería compartir con el 220? Y hasta el 200 debería tener la misma data. El router es el 201/24. Y tiene este IP. De alguna manera está alcanzable con este. Y como bien dijo alguien ahí, estos dos... Mirá, no hace rayas esto. ¿Ahora hay rayas? Serían los primeros 24 bits. Claro, claro. Acá el prefijo de red igual. Y a su vez esto está, como alguien dijo, está conectado. Este está conectado con este. ¿El 220 podemos asegurar que está de este lado o puede estar...? No, puede estar... O sea, el 120 tal vez puede tener tres routers en el medio hasta llegar. Bueno, hagámonos una ilusión de que no sabemos. Muy bien. Por ahora digamos que hay dos. Así como para completar el dibujo y que tengamos una idea en la cabeza. ¿Me explico? Vamos a suponer que hay dos routers. Y acá está. Son muy parecidos los números. Bueno, no les jode que sean parecidos. Resulta que el 120 está acá. ¿Y qué podríamos aseverar respecto del 120? Este es un router, ¿sí? Tiene que ser un router. ¿Qué pertenece también a la misma red? Acá también debería tener algo que sea de su misma red. Es decir, acá es 101. 101. 101. Vamos a tirar una rayita. Y ya que estamos. Vamos a suponer que esto está así directamente. ¿Qué hay acá? Si estos dos routers están conectados y son vecinos, ¿qué debería haber ahí también? También deberían pertenecer a la misma red. A la red 100 o a la red 200. No, puede pertenecer a otra. A una pública. Bueno, por ahora no quiero meter la internet para no quemar la cabeza. Debería haber una red cualquiera. 10.10.1/24. Tiene un IP de este lado. Y si este router es vecino a este, de este lado, tiene que tener un IP de la misma red. Por lo que hemos ido definiendo hasta acá. Es decir, que esto puede ser así, por ejemplo. ¿Se entiende? Sí, profesor. Perfecto. Yo tengo una duda. No entendí bien esto del medio. Con los 10.10.1/24. O sea, en el medio habría una red. Y lo que pasa es que si nosotros estamos haciendo este esquemático a nivel IP. Y dijimos, mirá, este router va a ser vecino a este. Y están conectados. Si nosotros aspiramos a que esto se comporte así. Ellos deben ser miembro de la misma red. Por lo tanto, le ponemos direcciones IP que puedan ser alcanzables para gente que son vecinos entre sí. Esta es una red IP que es distinta a esta. Por eso hay un router. Si fuera la misma red, este router no tendría sentido. Claro. Sería un switch. Por eso, piensen que ahora, cuando empezamos a dibujar cosas y ponemos conectores. Yo tendría que haber puesto unas nubecitas, pero no tengo nubecitas acá. Normalmente en IP lo que hacemos es dibujar. Cuando hay una red, ponemos una nube. Dibujamos los hosts, dibujamos los sistemas intermediarios. Y después la IP. Porque a nosotros lo único que nos importa es eso. Las capas que hay abajo, ustedes no van a ver nunca más qué capa hay de red abajo. Ustedes ni saben la capa de red que hay entre ustedes y yo ahora en este momento. Y no tiene ni sentido que la conozcan. Que lo resuelvan la gente que hace infraestructura de esa capa. El problema acá es la capa de ruteo para arriba. No sé si me explico. Y a su vez, para que ustedes, fíjense, se aferren a los conceptos. Ya van a ver que si yo a ustedes los parara. Y un poco de las disciplinas que creemos que adquieran. Si yo a ustedes los paro adentro de este router. Que listen las interfaces de red. Y ustedes dicen, ah mira, este tiene esta IP, esta IP. Los meto en este router, ven esta IP y esta IP. Y los pongo en este host. Y después los pongo en este otro host. Me tienen que poder dibujar la red. O se la tienen que poder figurar. Eso es lo que hace un ingeniero de redes. Yo ni conozco. Yo sé, por ejemplo, perfectamente cómo es la estructura de red. De casi todos los lugares con los que trabajo. Pero porque vi las IP de los aparatos. Y es más, si yo estoy parado en este equipo que está acá. ¿Sí? Y sé que su puerta de enlace es esta. Yo asumo que acá hay un router. Y chau, y lo dibujo. No tengo por qué preguntar mucho más. No sé si me explico. Lo que hicimos recién igual, entre todos, fue, fíjense, hemos hecho un supuesto. Esto es una pequeña internet para nosotros. Y esto es algo que la otra vez salió en los diarios y se terminó confirmando. Esto es una in-internet. Así. No es la, la internet. Ustedes saben que esto es distinto. Esto es muy distinto. Por lo menos para nosotros. Si ustedes nos escriben, che dice internet con minúscula. Bueno, esto es una redcita que hiciste. Esto es algo que usa los protocolos IP y camina. La internet con mayucla es la internet. La que usamos todos los días. Es como si esto fuera un sustantivo propio. ¿Se llamaban eso? ¿Sustantivo propio? Sí. Por eso. Y este es un sustantivo común. ¿Está bien? Esto es una internet. Por definición, ¿cuándo hay internet? Cuando hay más de una red IP, hay una internet. Acá hay una red IP y acá hay otra red IP. Esto es una internet. Eso es lo que definió la palabra internet. Hay una interrelación en redes. Esto es una internet. Y el principio funcional de una internet es el que mueve a la internet real. Así que no hacen falta muchos más conceptos. Esto es bien de ingeniería de la que nos gusta a todos, los ingenieros. Che, si yo hago algo y esto verifica que hace andar esto, no importa si después hay mil de esto en el medio. Tiene que andar. Entonces nuestro algoritmo, si resuelve este problema, va a resolver el de la internet con mayúscula. Es más, adelantándome, ¿qué cambiaría esto si esto fuera internet real? Si esto fuera internet de verdad entera. ¿Qué cambiaría en esto? La cantidad. Pero aparte de la cantidad, ¿qué no es un problema? Para un algoritmo no debería ser un problema la cantidad. Que hay redes públicas y privadas. ¿Qué cambia? ¿Qué cambia entonces? ¿El valor de qué? De la IP. Esto cambia nomás. Y como esto es un algoritmo, cambia un dato de un algoritmo. No cambia el algoritmo. ¿O no? Sí. Bien. Bueno, tenemos que escribir el algoritmo. Entonces, somos acá. Estamos en el 220 y resulta que nos llegó un paquete para el 120. Tratemos de tirar unas líneas de código de cómo resolveríamos este problema. Algo fueron diciendo recién. ¿Qué es lo primero que miraríamos? Que sean de la misma red. ¿O no? A ver. Tipo, "if ip destino" es la operación que habíamos hablado con el orco en los bits. Y Ethernet, para saber si están en la misma red. Me la re compliqué. A ver, a ver, a ver, dale, dale, dale, a ver. Pásamelo en limpio. ¿Cómo, cómo? En realidad lo que él está comentando es la primitiva del problema. ¿Qué es lo primero que tenemos que saber? Saber si están en la misma red. La IP destino. Claro. ¿Por qué? Entonces, llamémosle, tenemos que hacer una función. ¿Quieren que le llamemos? La función vecino. Bueno. Es un predicado, es decir, es lo que dice el ES. Si es vecino o no es vecino. ¿Y qué datos lleva la función vecino? La IP destino. IP destino. ¿Y qué es lo que le miramos a esta función? La máscara, las máscaras. Están usando la... ¿Qué hay que comparar? Algo que lo dijo alguien recién. ¿Qué es lo que compararíamos? Y el OR de la máscara con la IP de cada uno. ¿El OR? Si hacemos el OR de esto, ¿qué va a dar? Debería dar el /24, 11111, para que sea... no. ¿Qué hay que ver? ¿El OR no me sirve? ¿Qué es lo que me sirve? XOR. Pero... Pensemos en la operación binaria, pensemos luego. Claro, eso. Pensemos luego para que lo hagamos. ¿Qué es lo que tenemos que comparar? ¿Qué es lo que tenemos que comparar? ¿Qué es lo que tenemos que comparar? ¿Qué es lo que tenemos que comparar? ¿Qué es lo que tenemos que comparar? ¿Qué es lo que tenemos que comparar? ¿Qué es lo que tenemos que comparar? ¿Qué es lo que tenemos que comparar? ¿Qué es lo que tenemos que comparar? ¿Qué es lo que tenemos que comparar? La pregunta es ¿Cuál es la operación? Imaginando que acá hay una operación Esta es la operación, AND, ORG, SOR, lo que fuera ¿Y cuál es el acá el operando? Es decir, ¿contra qué lo tengo que comparar? Vemos la primera línea nada más ¿Cómo se ve la H? Ah, para, probablemente tengo que salirme Ahí está, sí, ahí va Ahí está Ahí tiene que poner unos ¿Dónde tengo que poner unos? Donde apoche la flechita ¿Es un AND, es un ORG? Es un AND Un AND ¿Por qué un AND? Porque si hay, como dijeron, el operando tiene todos unos en la flechita Cada vez que haya un cero, va a haber un cero Entonces va a quedar igual la edición de arriba ¿Y quién es el operando? Esa es la pregunta En IP, si ustedes quisieran hacer eso en IP No, no, para, completemos el problema binario Tírenme cuál sería el operando acá Ah, ok, el número Voy a separarlo, disculpen, esperen un cacito Son nada más dos ristras de 8 bits Vamos a hacer simple, son nada más que 16 bits Ahí va ¿Cuál sería el operando acá que me daría como resultado lo que tengo abajo? Bueno, cualquiera de 8 bits Cualquiera, yo pongo AND contra 1, 0, 0, 1, 1, 1, como cualquiera Si querés esto lo mismo que la primera parte de arriba Quiero los primeros 8 bits Yo quiero ver acá el resultado Yo quiero que aparezcan los primeros 8 bits Los voy a copiar para que sea más explícito Ustedes no están viendo, pero ya lo verán apenas ahora Yo quiero esto como resultado Y los voy a highlightear, a ver si puedo highlightear Bueno, no importa, se lee bien Entonces, obviamente lo operando está mal Lo que yo quiero es que ustedes me arreglen el operando ¿Cuál es el operando que a mí me desenmascarra nada más que esos primeros 8 bits? Y tengo que poner, los últimos 8 en este caso serían ceros y después todos 1 Bien, ok Algo así más o menos Bien, perfecto, buenísimo Y ahora sí, si lo traemos al mundo IP, ¿cómo mapeamos esos conceptos? ¿Cuál es el primer operando y cuál es el segundo operando? El primero, el de arriba, sería la IP y el de abajo, la máscara ¿La máscara de qué manera? Por ejemplo, ¿esta máscara de cuánto sería, más allá de que no tiene 32 bits? ¿Cuánto sería la máscara de la IP? Por ejemplo, ¿esta máscara de cuánto sería, más allá de que no tiene 32 bits? ¿Sería un barra cuánto esto? Un barra 24, porque tiene los últimos 8 en cero Está bien, completarlos hacia la derecha, no hacia la izquierda Imagínate que acá yo me hubiera tomado el trabajo de ponerle dos octetos atrás a todo, a las tres líneas Un barra 8 ¿Y por qué 8? ¿Cuál es el elemento del cual vemos 8 en la pantalla? Los primeros 8 a 1 Ok, ahí vamos Quiere decir que yo ese número que es decimal, 8, 16, 24, son los simples, o 10 o 12 Lo tengo que mapear en una ristra de unos para poder hacer esta operación binaria Nuevamente, porque queremos comparar los prefijos Quiero "filtrar" entre comillas y comparar el resultado de ese filtro El segundo operando el AND lo estoy usando como un filtro Lo estoy usando para decirle "mostrame nada más que los primeros bits, x cantidad de bits" Porque yo quiero comparar los primeros x cantidad de bits ¿Eso qué permitiría calcular? Que es lo que acaba de decir Juanjo ¿Qué es lo que les daría? Entra uno en la misma red con el prefijo de resultado No, no, no, eso no les va a decir, eso lo único que va a dar es el prefijo Lo que hay que hacer con la IP destino y la IP origen Para saber si es destino Y habría que hacer esta cuenta para las dos IPs y después comparar que los resultados son iguales Bien, ok, entonces nosotros tenemos que hacer Esto lo puedo dejar acá Está buena la cuentita No te molesta que lo corra y lo entiende No, porfis, dale, claro Bien, entonces tendría que decir, si la IP source AND, ¿qué cosa de la IP source? Supongamos que esto es, a ver, supongamos que IP source y IP destino ¿Cómo tendríamos que hacer si tiene varios atributos? ¿Qué deberíamos hacer con esto? IP destino podríamos, o sea, separar la marca Mirá, este es IP destino, esta es la IP, sub IP Que es todo lo que tengo, ¿no? Y mi IP origen en realidad tiene IP source, IP, es la IP ¿Qué otro atributo tengo yo que se dé esta? IP source, máscara o máscara Ah, máscara Me parece que tienen mis apuntes del año pasado ustedes Me parece Ok, ¿qué otro atributo tengo que tener? Nada más Prefijo, ah, no sé Por eso no, porque el prefijo lo hago con esto, entonces yo digo, bueno, si la IP source IP AND, la IP source ¿Qué? Máscara ¿Es igual a qué? A IP destino No, al prefijo Por eso, ¿cómo calculo el prefijo? Yo tengo que mirar, ¿cómo determinaría si 200, 100 entre 220 no es vecino a 220? Yo acá pongo la IP destino, IP AND qué? La IP, la máscara de la IP La misma La misma máscara que es mía, es decir, IP source, máscara Si esto es igual, hagamos esta operación con estos dos datos, ¿qué haría esto? Uno daría IP source, IP más, ¿qué número me quedaría? Con la cuenta que le mostró Juanjo acá, ¿qué número me quedaría? 192.168 No, no para ahí No, pero con los datos que tengo aquí 200 Y ahí no para, porque nos hemos recortado, no hemos hecho ninguna operación para el ¿Es igual a qué? Y si fuera, estaría en la misma red, exactamente lo mismo No, no, no, no, quiero que vean los datos que hay ahí, tienen el algoritmo 100.0 Es decir que, esto va a dar, este caso va a dar falso, ¿no? Falso, sí Supónganse que en vez de tratar de hablar con la 100.200, yo trato de hablar con la 202, si hago esta cuenta, ¿cómo va a dar esto? True 200, 200, acá, es decir que este predicado que he creado acá, más o menos mira si es vecino o no es vecino en base a mis datos de configuración, ¿o no? Sí, exacto ¿Sí o no? Sí ¿Sí? Ok, entonces, si esto es verdadero, le voy a decir que retorne verdadero Verdadero ¿Qué va a retornar esto? Es un predicado, digamos, estoy haciendo un... Falso Falso Ok A ver, esto me va a dejar achicar la letra ya Ok Bien, acá tengo la función vecino, entonces, la función vecino me calcula si alguien es vecino o no es vecino ¿Cómo la vamos a usar? ¿Qué tendría que hacer yo entonces ahora? Con esta... he creado un predicado que me resuelve si alguien es vecino o no es vecino Y otro if, que diría si if vecino is true, ahí resolvería que está dentro de la red, de su misma red, digamos Bien, digamos entonces, por ejemplo, arranca el algoritmo acá y dice, bueno, si vecino, ¿qué le tengo que pasar? Las ips ip source, ip destino Si este es verdadero, ¿qué hago? Le envío el... ¿Qué pasa? ¿Cómo lo mando, por correo? ¿Cómo hago? Por el puerto que esté conectado No, por eso, pero... muchachos, por eso le hice el dibujito para referenciar algo concreto Si alguien es vecino, por ejemplo, del 202, ¿qué tengo que hacer? Lo manda al gateway ¿Cómo? ¿Si es vecino mío? No, el gateway lo mandás cuando no es vecino tuyo A ver Pero, o sea, si están conectados a un switch, ¿se los tengo que mandar así o así al switch? ¿Cómo tienen quemada la cabeza con los switches? La verdad es que tienen un desastre en la cabeza Tienen un desastre con los switches en la cabeza El switch... a ver Supongamos que esto es una red Ethernet, ¿no? Que ustedes ven al switch, ven que... Ustedes generan los bits y van al switch, pero en realidad ustedes están hablando en Ethernet ¿Cómo contactan? Es decir, este es vecino El cable va al switch, pero... Si no tienen un problema en la cabeza severo, muy severo, de lo que es una red de conmutación de paquetes ¿Ustedes escriben en el cable la dirección física del switch? Si él es vecino Eso me parece que no lo tienen bien en la cabeza Me parece que hay algunos de ustedes que no lo tienen bien en la cabeza o lo tienen... Porque siempre meten al switch El switch es el aparato que está ahí y es con el que tienen el cable, punto ¿Con quién hablan ustedes cuando hablan con los vecinos? Con el vecino ¿Cómo? Por el cable El cable es la capa 1, y esta es la capa 3, nos falta una en el medio ¿Con quién hablan? Con la Mac Con la Mac... 800 millones de veces hemos hablado de la... Todo esto, evidentemente, son cosas que siempre cuesta masajearla Cuando ustedes escriben una trama Ethernet Es decir, este es vecino, listo, el flaco está en la misma cacerola de red mía Lo próximo que tengo que hacer es... Encontrar... Yo qué tengo de mi vecino Y su máscara te va a encontrar La máscara, no, si soy vecino mío Tengo que... ¿Quién dijo? La Mac Tengo que, con la IP que tengo, preguntar quién tiene esa máscara y después colocarle el zapado No, la máscara ya la tienen la misma, si ya dijimos que son vecinos Yo ya dije que es vecino Como él está en mi cacerola de red, no sé su Mac Pero yo tengo que escribir, yo después de eso escribo una trama Ethernet y pongo la Mac de él Y no sé si hay un switch, un hub, no me calienta, eso no lo sabe un host ni un dispositivo ¿Ustedes realmente creen que su computadora es consciente de que existe un switch al medio? No, no entiendo Entonces dejen de decir que va al switch, el switch es un intermediario Cuando hablen de Ethernet y de K2, el destinatario es la Mac destino No digan que es el switch, porque si no yo tendría que escribir la Mac del switch En K1 su máquina está conectada al switch Ustedes tienen un cable al switch, o tienen una conexión wifi a la AP Pero el destino de la trama es la Mac destino Es muy importante que todos confirmen que entienden lo que les estoy diciendo Si, profe O sea, independientemente de lo que hagan en el medio, podemos decir que el destino de la trama está fijado por la Mac Claro, porque si no están confundiendo el destino con el intermediario, no sé si me entienden El switch es un intermediate system de K2 El problema que les conté recién, de los end system y los intermediate system En K2 los end system son hosts y los intermediate system son routers En K2 los end system son Macs, son placas Y los sistemas intermediarios son los que intercambian las cosas entre esas Macs Que sea más o menos inteligente, yo les hago una pregunta ¿Cambia la vida en una red si ustedes ponen un hub o un switch? No ¿Cambia la vida si yo estoy cableado y ustedes están wifi y somos la misma red? Es decir, ustedes están enchufados al router de su casa y yo estoy wifi en su casa No, no es lo mismo Puedo hacer una pregunta, capaz me da tonta, pero, ¿quién digamos, si digamos, está en la misma red Ya no veo IP destino, si no voy a ver Mac de destino ¿Quién hace ese cambio de datagrama de K3 a trama de K2? Bueno, es muy buena la pregunta Es muy buena la pregunta y es buena y oportuna porque tenemos que, esto tenemos que ahora coserlo todo en la cabeza No se sientan ajenos, porque siempre llegamos a este lugar con toda la gente que llega hasta acá Y siempre hay una, porque realmente nunca se integra, no es un problema Él pregunta, y alguien quería hacer una cotación, no sé quién iba a proponer la respuesta Sí, yo, pero bueno, no importa, lo dejo que haga Bueno, dale, reformula la pregunta que tenía y la conversamos No, creo que lo que está preguntando mi compañero, o sea, la respuesta sería que si mi host ya sabe a quién le corresponde esa IP Ya él directamente en la siguiente capa, cuando crea la trama, coloca la máscara Si no lo sabe, tiene que hacer una inundación preguntando de quién es Y después, cuando ese host se auto-identifique, le va a responder con su máscara y ahí va a armar la trama y se lo anula Sin malos recuerdos, protocolo ARP, ¿no? Bien, correcto, así se llaman todas las piezas, pero acá hay una cosita que es una de las primeras cosas que uno tiene que entender Y por eso que las capas, cuando uno va bajando de capa, cada capa le agrega información a lo que va a mover en el cable Para que funcione el destino de cada capa, esto lo tienen que haber visto Y si no lo vieron, dese la página 10 del libro de Stalin en redes Y si no han visto el libro de Stalin, estamos en problema, el libro de comunicaciones de datos Cuando ustedes tienen un protocolo de capas, cada capa, para poder hablar con su otra capa, le agrega cabeceras a la información Es decir, la capa, vamos para arriba, la capa de aplicación dice acá "get/" dice el HTTP Ese "get/" se lo dio a la capa de transporte, la capa de transporte le va a decir "che, tengo que mover este get/" Contra aquel destino, pero agregame, va a hablar con el puerto 80 y yo te espero en el puerto 9000 Le agregó los puertos, eso se lo va a dar IP, dice "ah, esto va" Todo esto que trae puerto, origen, puerto destino, get/, hay que ponerle la IP destino y mi IP origen Es decir, que le agregó IP origen y IP destino La capa de abajo, que lo va a mover en el cable, antes de mandarlo en el cable, tiene que decir "che, ¿a quién le doy esto?" Tengo que averiguar la MAC del destino que me puede mover esto por los cables Entonces le va a agregar la MAC destino y mi MAC origen Entonces, la pregunta original que vos me hacías es "¿dónde está esta información?" Está toda, porque lo que termina entrando en el cable es una trama Ethernet Que a su vez la trama Ethernet le agrega, antes de meterla en el cable, le dice "che, ojo, esto es un Ethernet" Le pone un preámbulo, si, usted lo ha visto, unos bits de preámbulo y un bit que termina Dice "esto que transporto yo arriba es IP" Porque yo podría estar usando la capa Ethernet para llevar otro protocolo que no fuera IP Como es, no sé, bueno no hay muchos ahora todavía Como podría ser el protocolo NetBIOS, digamos, que funcionaría sin IP Pero yo puedo mover en Ethernet cosas que no sean IP Entonces cada capa le agrega cabeceras, que cuando llega al destino, cada capa va sacando el pedacito que le sirve para comer para saber qué decidir Eso usted tiene que entenderlo, que estamos hablando de capas y cada capa agrega información administrativa Que es la que va haciendo que esto funcione Entonces, lo próximo, nosotros estábamos viendo en CAP y PEDESTIN, ok Ahora, como estamos en un host, bueno, ok, listo, ya determinamos, no es vecino, si es vecino Y básicamente la decisión del algoritmo del host, estamos viendo todavía Pero este, si es vecino, dijimos, cómo va a averiguar, bueno, como dijo un compañero Los protocolos de capa de enlace tienen normalmente una forma de, si yo tengo información de una capa superior, averiguar la capa inferior Porque en este caso, ¿qué tengo yo de mi vecino? Yo sé fehacientemente qué es vecino por una cuestión de configuración Porque la máscara, operé la máscara y me dice, che, este flaco es vecino mío Si es vecino mío, significa que está al lado mío en el mismo medio, ¿qué hago? Dijo alguien por inundación recién Pregunto a quién le corresponde Pregunto en el cable, le digo, muchacho, a todo, ¿quién es? Dijimos que queríamos hablar con él, 202 ¿Quién es 192, 168, 202? Les grito, eso, ¿cómo se hace para que les llegue a todos? Un broadcast Claro, pongo un paquete en capa 2 de broadcast ¿Qué termina pasando con eso? Y todos los flacos dicen, ah, mira, llegó esto, alguien está preguntando por qué debería, qué respuesta debería recibir Y el que tenga esa IP le dice, soy yo Ah, soy yo, entonces, ¿qué hace? Todos le dicen, no, yo no soy, yo no soy No, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no Está un huevón preguntando por el 202, listo ¿Qué hace el 202? Ah, acá estoy ¿Cómo le dice que acá estoy? Bueno, le responde, le dice, acá estoy En esa respuesta, como el tipo le dijo acá estoy, ¿cómo va a ser para responderle? Veamos la capa 2 de la respuesta, de la pregunta esa que dicen de broadcast ¿Qué MAC destino lleva? La del que le quiere hablar, en este caso el 200 La pregunta de inundación lleva, ¿cómo se haría para que les llegue a todos? Con F, todo, con todas F Muy bien, va a todas F, ¿por qué a todas F y no a todas? ¿Quién dijo? ¿Por qué a todas F? Es parte del protocolo, para que la reciban todos, para que la agarren todos digamos En el protocolo, si yo quiero hablar con todos en una capa 2, les grito al FFF, es decir, escribo un solo paquete al FFF Eso golpea a todas las interfaces de la red, que están en el mismo, capa física mía A todas, eh No les quiero enroscar la labor ahora, pero les llega a todos Entonces, el 202 que recibió, recibió un datagrama con MAC destino FFFF, MAC origen la de quién? La del 220 La del 220, la del que estaba preguntando, entonces ¿qué hace para responderle? ¿A quién le responde? Toma esa MAC de la 220 y pone su propia MAC La MAC destino, la del 220, la del como origen y dice "soy yo" Entonces, ¿qué es lo primero que tenemos que averiguar acá si es vecino? ¿Quién tiene ese IP? ¿Ah? Le dimos a la MAC, digamos La MAC es una función que pide a la MAC, sí Entonces, si la MAC es la MAC, no sé, llamémosle función Preguntar MAC de quién Del equipe destino Destino, bien Y si ya tengo la MAC, ¿qué hago? Se la manda directamente, se da la mano Manda el mensaje con la MAC Dice "mira, tengo una función que es de la capa 2, que es mandarle la trama, no sé, ¿a quién?" A esa MAC MAC ¿Y qué le tengo que mandar? Los datos Los datos de la RAM, sí, data de la RAM IP ¿Y acá qué tengo que hacer? ¿Cuándo creen que corre este algoritmo? ¿Cómo le hago? ¿Cómo le hago? ¿Cómo le hago la pregunta? ¿Qué hago acá? Es decir, ¿mandé la trama y después qué hago? ¿Y nada, ya lo mando? Por eso, ¿este algoritmo acá qué hace? Después de esto, ¿qué hace? Es decir, este programa, ¿cuándo se va a correr? Cada vez que tenga que mandar, es decir, acá ha habido, imagínense, hay una Todo este algoritmo es mandar IP, a IP destino, ¿sí? ¿Está bien? Esta función se llama mandar IP ¿Ok? ¿Quién usa la función mandar IP? Mandar data de la RAM IP Si lo pensamos en capa Capa 3 Es decir, esta función la va a llamar la capa de transporte cada vez que tenga un transporte para mandar, ¿o no? Entonces, si acá mandó la trama, después de esto, ¿qué hace? ¿Qué más tiene que hacer? ¿Y si tiene otra trama que mandar? No, bueno, por eso, pero ¿usted está encodeando la mandar trama IP? Estoy tratando de hacerle Ya decidieron a quién va, mandaron la trama en capa 2, ¿qué hacen? Si esto es una función, después acá, ¿qué más tienen que hacer? ¿Hay algo más que hacer o están listos? ¿Esperar la respuesta? No, no siempre tenés respuesta Es decir, de nuevo, se los he hecho así a modo de programa Ustedes estamos codeando la capa de IP, por decirlo de alguna manera, ¿sí? Mandaron un paquete IP Ya vieron si era vecino o no era vecino Este era vecino y se lo mandaron al vecino ¿Qué pasó después? ¿Qué hay que hacer? ¿Terminaron lo que tenían que hacer o no terminaron? Sí, ya mandan la respuesta Por eso, ¿qué tal? Si no es vecino... Por eso, pero si es vecino le manda la capa 2 y termina ¿O no? Le pongo "exit" para que lo veamos Si no es vecino, ¿qué hacemos? Tengo que... o sea, la más que voy a poner es la de mi gateway A ver eso, por qué... Si el paquete no es para mí, si yo determino que no es un vecino Esto agarró y me dio el caso que tenemos dibujado acá ¿Qué hago? Se lo manda al router Claro, se lo tengo que dar al router Entonces... Envía el... o sea, manda a trama pero a la router ¿Se entiende lo que estamos hablando? Es decir... Recién tenía un paquete que era para uno que era vecino que está acá Yo pregunté en este cable, hice un broadcast y se lo mando derechito Ahora sé fehacientemente que este paquete se tiene que ir por acá ¿Está bien? Tiene que agarrar y salir, irse por acá ¿Qué me cambia de este algoritmo? El destino Destino ¿Me cambia la IP de destino? No, no, la IP de destino no, la MAC de destino cambia ¿Todos ven eso? Sí Bien, es decir que si esto no es así... O sea, perdón, a ver si... A ver si lo entendí bien Entonces, en el datagrama tendríamos la MAC, sería la MAC del router Exactamente Y la IP sería la IP de destino que definimos al principio La IP yo no la toco porque yo el datagrama no lo puedo tocar, lo tengo que encaminar nada más El datagrama no lo toco, es el mismo Digo, che, ¿se lo pongo acá o se lo pongo allá? Eso se ve Entonces, acá ¿por quién pregunto? Por la MAC del gateway, del router Debería tener entonces, supónganse que tenemos en algún lado Acá tenemos un parámetro de configuración que es "ipsource_gateway" En este caso ¿quién era? El 201 Entonces yo acá voy a decir, che, mirá, "ipsource_gateway" Y acá voy a decir, "manda_trama" ¿a quién? A MAC ¿Y qué le mando? El datagrama IP ¿Se puede mejorar algo este código? Está medio cochino ahí ¿Qué harían con esto? ¿Qué le ven que no lo he hecho bien yo acá? Hacía una función que se iba a mandar eso y nada más le pasaba la IP de destino ¿Qué está cambiando el código acá y este exit? ¿Cómo lo harían? Yo acá también tendría que poner un exit ¿Cómo mejorarían este código acá? Y que no sea solo "ipsource" o "ipsdestino" si no lo vea antes Y solo ponga un código, si no lo duplica, si está casi duplicado ¿Y el "manda_trama" no hace falta? Lo puedo poner abajo Bien Este lo saco acá Y este lo saco ahí ¿O no? Sí, brofe Brofe, tengo una duda, es medio tonta, es bastante tonta Pero cuando nosotros acá pusimos el router, que dijimos que tiene 192, 168, 201 Los routers, ¿tienen dos? O sea, ¿por qué acá tienen... Me cuesta ver por qué tienen dos direcciones IP, una es privada y la otra es pública, sería Todas son privadas acá, eh Este es el rango, las 10 son redes que no están directamente conectadas a internet también Son todas IP privadas Pero igual, es buena tu pregunta Imaginate, si vos sos un puente y tenés un solo lado, ¿podés vincular gente? No Por eso, entonces como mínimo, por eso por definición Yo te diría, si hay dos redes IP y te digo que están conectadas ¿Qué hay en el medio? Claro, hay como dos vías, sería Siempre, un router... Claro, no para ir y venir, digamos, por definición Si vos, acá hay una red, ¿no? Esta es una red IP y esta es otra red IP, y son redes IP distintas ¿Por qué son distintas? Bueno, porque su número de red operado a su máscara da otro prefijo Y yo las quiero vincular, lo que tengo que poner en el medio es un router Entonces como mínimo, cuando hay router, hay al menos dos redes IP distintas ¿Por qué digo al menos? Porque vamos a empezar a ver que yo podría tener un router, como le mostró Juanjo recién Tres, cuatro, diez interfaces Y un nodo más central del... Pensemos en el ruteo, ¿cuál sería un ruteo en una ruta? ¿A qué se parece un router con muchas interfaces? En el ruteo, cuando van por la ruta ustedes Una rotonda Una rotonda, por ejemplo, con más de una salida, porque usted dice "ah, no, mirá, llego acá y me puedo ir a Córdoba, puedo ir a San Luis, puedo ir a Neuquén" Y en algún lugar va a haber más de... no siempre hay bifurcaciones que a una u otra Claro, bien, perfecto De hecho, eso da pie a... Que ya lo vamos a ir generalizando, es decir Yo podría tener muchas interfaces Claro, y si yo tengo muchas, ¿le da una dirección por cada interfaz? Muy bien, muy bien Entonces Antes de irme ahí, verifiquemos si esto... a ver si esto le podemos hacer la tabla de la verdad y anda bien Coinciden que más o menos esto... Le llamé mandar datagrama IP, esta es No sé si está Juanjo ahí Vecino, sí vecino Sí ¿Cómo se llama en el API de SOCKS de Berkeley esta función vista desde... bueno, no se ve desde arriba? Bueno, sería, en realidad tenés que abrir un socket raw y ahí tenés que hacer un send message sería Send underscore message, MSG Más o menos, algo así, claro Ese sería, obviamente está mucho más adornado de arriba, pero sería básicamente ese Entienden ustedes que esto sería, desde el punto de vista del... y esto es la parte que quisiera que ustedes conecten Si fueran un desarrollador y están haciendo la capa IP, están decidiendo programar esta parte que está acá Y vos decís, che, ¿quién usa esto? Y esto lo usa alguien que está arriba, que necesita mandar un datagrama IP ¿Está bien? Sí, capa 4 La capa de transporte es la consumidora de esta función, sería Y fíjense que acá nosotros estamos consumiendo una función, esta, mandar trama, sería una función de qué capa? Dos Claro, está bien Acá hemos abusado de una especie de generalidad, pero lo que estamos tratando de hacer es aproximarnos a una idea de lo que sería el algoritmo Y supongamos por un instante, como bien decían recién ¿Qué puede pasar si yo tuviera... Más de una dirección IP acá, por ejemplo, estoy conectado, por un instante, estoy conectado Eh... No, no te inclines Esta es mi IP, soy un host, ¿no? Sigo siendo... Soy un host que tengo un IP de este lado, pero también tengo otro IP y acá hay... Acá estoy conectado a la red Uno Tengo el IP 1.20 Y resulta que este es el router Eh... Ahora no lo voy a complicar con el router Soy una máquina... Ay, borrate Una máquina que tiene dos placas de red y tengo acá... ¿Puedo tener dos placas de red o no puedo tener dos placas de red? Sí, mientras tengas los puertos PSI Sí O por ejemplo, puedo tener una placa de red y cómo podría tener... distintas redes capa 2 Una antenita Wi-Fi que pasa No, no, con la misma placa de red Hay manera de que con la misma placa de red tenga... Emulado, actualizado En varias redes... No Y de cielo, no Una VLAN, yo puedo tener una sola placa de red y estar en la VLAN 1 y en la VLAN 10 Tengo una placa de red y está taggeando en VLAN distinta Teníamos miedo de decir switch ¿Ah? Teníamos miedo de decir switch No, bueno, pero... La VLAN, de nuevo, ¿cómo creen que están hechas las VLAN? Claro, no, no son distintas Es más, es más, les voy a decir ¿Se puede hacer VLAN sin un switch? Creo que sí ¿Cómo? Estoy seguro Y porque las VLANs eran lógicas, o sea, llevaban cada trama, cada catagrama Llevaba un pedacito que decía que VLAN pertenecía, ¿cierto? Bien, por eso, yo puedo hacer perfectamente Ustedes se pueden crear VLANs en un switch, en un hub Y que la VLAN es un tag, si la ponen en modo taggeada, que sea, más Ponen que está adelante de las etiquetas de las tramas está el tag de VLAN ¿Sí? Entonces yo puedo agarrar y decir, che, mirá, pongo VLAN 10 o VLAN 11 Es la misma placa, escribo una trama, nada más que una lleva el tag de la VLAN 10 Y el otro lleva el tag de la VLAN 11 Entonces, el juego de VLAN está basado en las etiquetas, yo levanto las de VLAN que estoy taggeando No hace falta ningún switch Pero bueno, para darle una media vuelta de rosca al problema Si yo tuviera este escenario, ¿cómo le iría a nuestro algoritmo? Le iría a un FOR por cada IP que tiene Se fija en una IP si es vecino y se fija en la otra si es vecino Y en caso de ser ninguna va algún... Ah, entonces, ¿qué cambiaría de lo que tenemos acá? ¿Qué hay que mejorar acá? Y hay que agregarle la otra IP, la otra máscara Por eso, pero si tenemos que modelarlo en código, ¿esto qué sería? ¿Qué le falta a esto? Una clase, hacerlo por clases No, porque si lo hiciera por clases tendría que instanciar objetos distintos Si yo tuviera una... ¿esto qué es configuración? ¿Qué me cambio ahora acá? Yo tengo la eth0 es esta, y la eth1 es... 192, 168, 120, /24, digamos Tengo otra IP Si lo tuviera que meter en una estructura, ¿qué le agregan a esta estructura? ¿Qué se refiere con...? Si ustedes tienen que cargar toda esta interformación en una estructura de datos Porque esto recién la teníamos acá, decíamos IP source, IP Pero resulta que ahora hay varias IP source Y no podemos ponerlo en el mismo modelo Bueno, por eso, ¿qué le falta a esto? Una dimensión Claro Entonces, ¿este es el problema? Bueno, por eso, ¿qué le falta a esto? Una dimensión Claro Entonces este sería, no sé, IP source sub 0 IP source 0 ¿Sí? 0 ¿Y qué más debería hacer acá ahora? Esto se debe decir, el IP 1 Como si fuera, este es 1, 20 No voy a complicar con el gateway por ahora Porque después vamos a ir a la generalización de esto Entonces, ¿qué le cambiaría a este algoritmo? Para que pueda soportar ese problema Si yo fuera un host con más de una IP, ¿qué debería haber? Y por ahí si, tendríamos que ver si es vecino para cada IP que yo tengo Por eso, ¿dónde hay que iterarlo? En el método Acá, entonces, tendría que ser para Para cada IP source Sería una iteración acá, ¿no? No se está viendo a medida que típicas, no sé si es que tenés otra ventana Sí, se quedó otra Está frizado ¿No? Pensé que era el único No, no, no, no, no, no, no Está esperando que refrescara, pero hace rato que cuando vas hablando, el sub 0 Será mi, ah, miércoles, pero dice, ¿estás presentando para todos? A ver, dejo de presentar y lo mando nuevo Dale, trae No, no, no, profe, porque yo acá me, o sea, si se mete a la página A ver Sí, en la pizarra apareció En la pizarra Ahí estoy de nuevo, a ver Tal vez porque estaba escribiendo y no lo había soltado, a veces como que Uy, mirá, hay muchos, claro, todo eso, todo el arroyo ese que has hecho, no sé No, hay que hacer, hay que hacer, ah, con razón lo escuchaba, es que están callados Me parece que es lo que decís, uy, hay que soltarlo Bueno, no, agregué acá la dimensión 1 con las dos IP ¿Y qué tenemos que hacer acá? Tenemos que hacer un bucle Sí Para cada IP source Sub i en IP source O bueno Así no se me O para cada, sí, claro, bueno Habría que llamarle distinto ahí Llamémosle acá O ponerle mayúsculas eso, pizarra array o algo por el estilo, como quieras IPs, ah, bueno, ok Ahí sí se ve, ah, se ve en mi pantalla, ustedes lo ven porque ven mi pantalla Ah, ahora sí Sí, está en mi pantalla Está, entonces para cada IPs en Se entiende que en IP source No, al revés, para cada IP Para cada IP, se usa en IP Bueno, no sé cómo quieren hacer, no sé cómo tienen el bucle, esto significa que lo carga en IP source Y después usa en IP source acá adentro Bueno, sí Para cada IP, claro, _src, sería al revés, al menos yo lo entendería al revés For each IP_src, ahí está, en IPs Ahí está, dos puntos, le gusta dos puntos Perfecto Y sí, ya que me estás traduciendo Python, hazme la convocatoria Entonces, ok Esto generalizaría, tiene una Para que esto no falle, vamos a hacer acá un abuso O pongámoslo, porque no es mala idea ponerlo como algo global que está fuera de la lista, ¿no? Si lo sacamos, ok Sí Acá vamos a hacer así Claro, ponerle gateway directamente Ok ¿Tiene entonces un solo gateway y no importa cuántas IPs tenga? Es parte de lo que queremos En principio sí, más avanzadamente hablando, de forma más avanzada No puede tener múltiples gateways, pero requiere otro tipo de lógica Vamos a quedarnos con que sí, con que el gateway es global Lo que no va a ser global es en cuál Recordemos que el gateway es siempre mi vecino Sí En eso estamos de acuerdo, ¿no? Ya habíamos recontra hablado de eso Por lo tanto, el gateway va a estar asociado a una interfaz en particular Un gateway va a ser siempre vecino de una interfaz en particular Entonces hay una relación con cuál es la interfaz correspondiente Pero lo vamos a dejar global por ahora Bien Supongamos, a ver este algoritmo, si camina más o menos bien Si le creamos No sé, esta máquina está reinteresada en pertenecer a muchas redes Son las 8 menos cuarto, ¿te parece que hagamos un toquecito antes de meterse? Hacemos unos hasta las 8, ponele No, no, pero cierra acá porque en realidad debería ser corto ¿Qué pasa por un instante si, no sé, esta máquina también pertenece a la red 172, 16, 16, 20 Y esto es 16, 1 Se rompe el algoritmo Hay que agregarlas ¿Se rompe el algoritmo? No, hay que agregar al array, hay que agregar el IP nuevo y listo Es decir que, bueno, esto es config ¿Esta configuración dónde se hace? Normalmente en su window El sistema operativo Claro, va a entrar panel de control, configuración, agregó el IP y listo Es decir que, digamos que, ¿este algoritmo soportaría cientos de IP o no soportaría cientos de IP? Si me sirviera de algo, digamos, si el IP es 2 y la máscara 2 ¿Camina o no camina? Camina, camina Si Si te quieres tomar la leche, claro, pero camina 20 Si, camina Bueno, me parece bien lo que dice Juanjo, nos tomamos un break hasta las 20 Hasta las 8 creo que estamos, dale Ok, perfecto Voy a cortar la grabación de esto, así se va cocinando